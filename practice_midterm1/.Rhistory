mean_mammal_diversity=mean(Diversity_MammalSpecies),
nsamples=n())
names(gabon)
getwd()
knitr::opts_chunk$set(echo = TRUE)
4*12
x <- c(4, 6, 8)
ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar()
5 - 3 * 2
8 / 2 * 2
(5 - 3) * 2
?mean
my_experiment <- sum(treatment, control)
treatment <- 36
control <- 38
my_experiment <- sum(treatment, control)
my_experiment
treatment+control
venom_GT <- 270
chiron <- 261
veyron <- 268
is.integer(my_numeric) #is my_numeric an integer?
my_numeric <- 42
my_integer <- 2L #adding an L automatically denotes an integer
my_character <- "universe"
my_logical <- FALSE
my_complex <- 2+4i
class(my_numeric)
is.integer(my_numeric) #is my_numeric an integer?
my_integer <-
as.integer(my_numeric) #create a new object specified as an integer
is.integer(my_integer) #is my_numeric an integer?
my_missing <- NA
is.na(my_missing)
new_varia <- NA
is.na(new_varia)
anyNA(new_varia)
anyNA(my_missing)
new_vector <- c(7, 6.2, 5, 9, NA, 4, 9.8, 7, 3, 2)
mean(new_vector)
mean(new_vector, na.rm=T) #na.rm removes the NA values in the vector
my_vector_sequence==15
my_vector <- c(10, 20, 30)
my_vector_sequence==15
my_vector <- c(10, 20, 30)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thrusday", "Friday", "Saturday", "Sunday")
my_vector_sequence <- c(1:100)
my_vector_sequence
days_of_the_week[3]
my_vector_sequence==15
my_vector_sequence<=10
my_vector_sequence[my_vector_sequence<=10]
Philosophers_Stone <- c(317.5, 657.1)
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix
region <- c("US", "non-US")
region
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
colnames(harry_potter_matrix) <- region
rownames(harry_potter_matrix) <- titles
harry_potter_matrix
global <- rowSums(harry_potter_matrix)
global
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix
total_earnings <- colSums(all_harry_potter_matrix)
total_earnings
#total earnings get the sum of all the columns in the harry potter matrix
rbind(all_harry_potter_matrix, total_earnings)
#r is for row so therefore bind total_earnings to the harry potter matrix
harry_potter_matrix[2,1]
harry_potter_matrix[1:4]
non_us_earnings <- all_harry_potter_matrix[ ,2]
mean(non_us_earnings)
Philosophers_Stone <- c(317.5, 657.1)
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix
region <- c("US", "non-US")
region
names(msleep)
msleep <- msleep #show the dataset in the environment panel.
skim(msleep24) #no missing data, perfectly complete, mean, quartiles, histogram
msleep24 <- msleep %>%  #add msleep24 to beginning
mutate(sleep_total_24 = sleep_total/24) %>% #mutate makes a new column. new variable is sleep_total_24. then put the expression.
select(name, vore, sleep_total_24) %>% #Can put sleep_total in here to check if half
filter(sleep_total_24<=0.3) %>%
arrange(desc(sleep_total_24))
summary(msleep24) #look at sleep total min and max values to check.
skim(msleep24) #no missing data, perfectly complete, mean, quartiles, histogram
skim(msleep24) #no missing data, perfectly complete, mean, quartiles, histogram
msleep <- msleep #show the dataset in the environment panel.
skim(msleep24) #no missing data, perfectly complete, mean, quartiles, histogram
hist(msleep24$sleep_total_24)
head(msleep)
large <- msleep %>%
select(name, genus, bodywt, sleep_total) %>%
filter(bodywt > 200) %>%
arrange(desc(bodywt))
large
#this is done above! This is another way that works
msleep %>%
tabyl(genus)
msleep %>%
summarize(n_min_sleep=min(sleep_total), n_max_sleep=max(sleep_total), n_mean_sleep=mean(sleep_total), total=n())
msleep %>%
group_by(order) %>%
summarize(mean_brain_wt = mean(brainwt), total=n())
msleep %>%
filter(order=="Carnivora") %>% #look into one obsevation we know
select(order, genus, brainwt) #maybe somone was afraid to measure panthers
penguins %>%
group_by(sex) %>%
summarize(across(contains("mm"), mean, na.rm=T))
library("tidyverse")
library("janitor")
library("tidyverse")
library("janitor")
wolves <- read.csv("data/NPS_wolfmortalitydata.csv", na = c("NULL")) %>% clean_names()
names(wolves)
View(wolves)
glimpse(wolves)
View(wolves)
View(wolves)
wolves %>%
arrange(park)
wolves %>%
select(wolves, park)
select(wolves, park)
#select(wolves, park) #double check this
table(wolves$park)
wolves %>%
select(park$packsize_aug)
wolves %>%
filter(park$packsize_aug)
wolves %>%
filter(park,packsize_aug)
wolves %>%
select(park,packsize_aug)
wolves %>%
filter(park & packsize_aug) %>%
group_by(park) %>%
summarize(wolf_pack_size = sum(packsize_aug, na.rm = T)) %>%
arrange(desc(wolf_pack_size))
wolves %>%
filter(park, packsize_aug) %>%
group_by(park) %>%
summarize(wolf_pack_size = sum(packsize_aug, na.rm = T)) %>%
arrange(desc(wolf_pack_size))
wolves %>%
select(park, mort_all)
wolves %>%
select(park, mort_all) %>%
arrange(park)
wolves %>%
select(park, mort_all) %>%
arrange(park)
select(wolves, contains("YNP"))
View(wolves)
View(wolves)
wolves %>%
select(park, biolyr, pack, packcode, packsize_aug, mort_yn, mort_all, mort_lead, mort_nonlead, reprody1, persisty1) %>%
filter(YNP)
wolves %>%
select(park, biolyr, pack, packcode, packsize_aug, mort_yn, mort_all, mort_lead, mort_nonlead, reprody1, persisty1) %>%
group_by(YNP)
wolves %>%
select(park, biolyr, pack, packcode, packsize_aug, mort_yn, mort_all, mort_lead, mort_nonlead, reprody1, persisty1) %>%
group_by("YNP")
wolves %>%
select(park, biolyr, pack, packcode, packsize_aug, mort_yn, mort_all, mort_lead, mort_nonlead, reprody1, persisty1) %>%
group_by("YNP") %>%
summarize("YNP")
ynp <- wolves %>%
select(park, biolyr, pack, packcode, packsize_aug, mort_yn, mort_all, mort_lead, mort_nonlead, reprody1, persisty1) %>%
group_by(park) %>%
summarize("YNP")
View(ynp)
ynp <- wolves %>%
select(park, biolyr, pack, packcode, packsize_aug, mort_yn, mort_all, mort_lead, mort_nonlead, reprody1, persisty1) %>%
group_by(YNP) %>%
summarize("YNP")
ynp <- wolves %>%
select(park, biolyr, pack, packcode, packsize_aug, mort_yn, mort_all, mort_lead, mort_nonlead, reprody1, persisty1) %>%
filter("YNP")
ynp <- wolves %>%
filter(park=="YNP")
#select(park, biolyr, pack, packcode, packsize_aug, mort_yn, mort_all, mort_lead, mort_nonlead, reprody1, persisty1) %>%
#group_by(YNP) %>%
#summarize("YNP")
View(ynp)
wolves %>%
filter(park, packsize_aug) %>%
#group_by(park) %>%
#summarize(wolf_pack_size = sum(packsize_aug, na.rm = T)) %>%
arrange(desc(wolf_pack_size))
wolves %>%
#filter(park, packsize_aug) %>%
#group_by(park) %>%
#summarize(wolf_pack_size = sum(packsize_aug, na.rm = T)) %>%
arrange(desc(wolf_pack_size))
wolves %>%
#filter(park, packsize_aug) %>%
#group_by(park) %>%
#summarize(wolf_pack_size = sum(packsize_aug, na.rm = T)) %>%
arrange(packsize_aug)
#DOUBLE CHECK THIS
wolves %>%
#filter(park, packsize_aug) %>%
#group_by(park) %>%
#summarize(wolf_pack_size = sum(packsize_aug, na.rm = T)) %>%
arrange(desc(packsize_aug))
#DOUBLE CHECK THIS
View(ynp)
knitr::opts_chunk$set(echo = TRUE)
iris %>%
group_by(species) %>%
summarize(avg = mean(Sepal.Width)) %>%
arrange(avg)
males <- bison_new %>% #first pull out the males
filter(animal_yob>=1980 & animal_yob<=1990) %>%
filter(animal_sex=="M")
table(bison_yob$animal_sex) #Profs answer
View(ynp)
ynp %>%
filter(biolyr>=1997 & biolyr<=2009)
#mean($animal_weight)
View(ynp)
View(ynp)
ynp %>%
filter(biolyr>=1997 & biolyr<=2010)
#mean($animal_weight)
ynp %>%
filter(biolyr>=1997 & biolyr<=2010) %>%
filter(pack=="druid")
#mean($animal_weight)
ynp %>%
filter(biolyr>=1997 & biolyr<=2010) %>%
filter(pack=="druid") %>%
summarize(mean_pack_size = mean(packsize_aug))
ynp %>%
filter(biolyr>=1997 & biolyr<=2010) %>%
filter(pack=="druid") %>%
filter(packsize_aug)
ynp %>%
filter(biolyr>=1997 & biolyr<=2010) %>%
filter(pack=="druid") %>%
select(packsize_aug)
#summarize(mean_pack_size = mean(packsize_aug))
ynp %>%
filter(biolyr>=1997 & biolyr<=2010) %>%
select(packsize_aug) %>%
filter(pack=="druid")
ynp %>%
filter(biolyr>=1997 & biolyr<=2010) %>%
select(packsize_aug) %>%
#filter(pack=="druid")
#summarize(mean_pack_size = mean(packsize_aug))
ynp %>%
select(packsize_aug) %>%
#filter(biolyr>=1997 & biolyr<=2010) %>%
#filter(pack=="druid")
#summarize(mean_pack_size = mean(packsize_aug))
select(ynp, packsize_aug)
#filter(biolyr>=1997 & biolyr<=2010) %>%
#filter(pack=="druid")
#summarize(mean_pack_size = mean(packsize_aug))
select(ynp, packsize_aug)
filter(pack=="druid")
select(ynp, packsize_aug) %>%
filter(pack=="druid")
View(wolves)
View(wolves)
wolves %>%
filter(pack == "Bearpaw") %>%
select_if(all)  # Selects all columns where all values are TRUE
wolves %>%
filter(pack == "Bearpaw") #%>%
#select_if(all)  # Selects all columns where all values are TRUE
wolves %>%
filter(pack == "Bearpaw") %>%
mutate(death_wolves = mort_all/biolyr)
#select_if(all)  # Selects all columns where all values are TRUE
#fish %>%
#mutate(length_mm = length*10) %>%  #new variable length in mm take the length and multiply by 10; it was originally cm
select(fish_id, length, length_mm) #the variable in the table still says length
wolves %>%
filter(pack == "Bearpaw") %>%
mutate(death_wolves = mort_all/biolyr)
#select_if(all)  # Selects all columns where all values are TRUE
#fish %>%
#mutate(length_mm = length*10) %>%  #new variable length in mm take the length and multiply by 10; it was originally cm
#select(fish_id, length, length_mm) #the variable in the table still says length
wolves %>%
filter(pack == "Bearpaw") %>%
mutate(death_wolves = mort_lead/biolyr)
#select_if(all)  # Selects all columns where all values are TRUE
#fish %>%
#mutate(length_mm = length*10) %>%  #new variable length in mm take the length and multiply by 10; it was originally cm
#select(fish_id, length, length_mm) #the variable in the table still says length
wolves %>%
mutate(death_wolves = mort_lead/biolyr)
#select_if(all)  # Selects all columns where all values are TRUE
#fish %>%
#mutate(length_mm = length*10) %>%  #new variable length in mm take the length and multiply by 10; it was originally cm
#select(fish_id, length, length_mm) #the variable in the table still says length
wolves %>%
mutate(death_wolves = mort_lead/biolyr) %>%
select(pack, packsize_aug, biolyr, mort_lead, death_wolves)
#select_if(all)  # Selects all columns where all values are TRUE
#fish %>%
#mutate(length_mm = length*10) %>%  #new variable length in mm take the length and multiply by 10; it was originally cm
#select(fish_id, length, length_mm) #the variable in the table still says length
View(ynp)
ynp %>%
filter(year>=1995 & year<=2021)
ynp %>%
filter(year>=1995 & year<=2021)
ynp %>%
filter(biolyr>=1995 & biolyr<=2021)
ynp %>%
filter(biolyr>=1995 & biolyr<=2021) %>%
filter(pack$persisty1)
ynp %>%
filter(biolyr>=1995 & biolyr<=2021) %>%
table(pack$persisty1)
ynp %>%
filter(biolyr>=1995 & biolyr<=2021) %>%
group_by(pack)
ynp %>%
filter(biolyr>=1995 & biolyr<=2021) %>%
group_by(pack) %>%
summarize(persistence=sum(persisty1, na.rm=T)) %>%
arrange(desc(persistence))
ynp %>%
filter(biolyr>=1995 & biolyr<=2021) %>%
group_by(pack) %>%
summarize(persistence=sum(persisty1, na.rm=T)) %>%
arrange(desc(persistence))
ynp %>%
filter(biolyr>=1995 & biolyr<=2021) %>%
group_by(pack) %>%
summarize(persistence=sum(persisty1, na.rm=T)) %>%
arrange(desc(persistence))
wolves %>%
mutate(death_humans = mort_lead/biolyr) %>%
select(pack, packsize_aug, biolyr, mort_lead, death_wolves) %>%
count(death_humans)
wolves %>%
mutate(death_humans = mort_lead/biolyr) %>%
select(pack, packsize_aug, biolyr, mort_lead, death_humans) %>%
count(death_humans)
wolves %>%
mutate(death_humans = mort_lead/biolyr) %>%
select(pack, packsize_aug, biolyr, mort_lead, death_humans) %>%
count(death_humans) %>%
arrange(desc(n))
wolves %>%
mutate(death_humans = mort_lead/biolyr) %>%
count(death_humans) %>%
arrange(desc(n))
wolves %>%
mutate(death_humans = mort_lead/biolyr) %>%
arrange(desc(n))
wolves %>%
mutate(death_humans = mort_lead/biolyr) %>%
arrange(desc(death_humans))
wolves %>%
group_by(mort_all) %>%
summarize(total_mortal = max(mort_all)) %>%
arrange(desc(total_mortal), pack) %>%
head(10)
wolves %>%
group_by(mort_all) %>%
summarize(total_mortal = max(mort_all)) %>%
#arrange(desc(total_mortal), pack) %>%
head(10)
wolves %>%
group_by(mort_all) %>%
summarize(total_mortal = max(mort_all)) %>%
#arrange(desc(total_mortal), pack) %>%
wolves %>%
group_by(mort_all) %>%
wolves %>%
group_by(mort_all)
View(wolves)
View(ynp)
#select(ynp, packsize_aug) %>%
#filter(pack=="druid")
#filter(biolyr>=1997 & biolyr<=2010) %>%
#filter(pack=="druid")
#summarize(mean_pack_size = mean(packsize_aug))
View(ynp) #I viewed by name druid in the packs variable and looked at packsizeAug to determine the size.
wolves %>%
filter(packsize_aug<3)
#summarise(across(contains("RA_"), mean))
wolves %>%
filter(packsize_aug<3)
summarise(across(contains("DENA"), mean))
wolves %>%
filter(packsize_aug<3)
wolves %>%
filter(packsize_aug<3) %>%
summarize(mean_packsize = mean(packsize_aug))
wolves %>%
filter(packsize_aug<3) %>%
summarize(mean_packsize = mean(packsize_aug)) %>%
arrange(desc(mean_packsize))
wolves %>%
filter(packsize_aug<3) %>%
#summarize(mean_packsize = mean(packsize_aug)) %>%
arrange(desc(mean_packsize))
wolves %>%
filter(packsize_aug<3) %>%
summarize(mean_packsize = mean(packsize_aug)) %>%
arrange(desc(mean_packsize),pack)
wolves %>%
filter(packsize_aug<3) %>%
summarize(mean_packsize = mean(packsize_aug)) %>%
wolves %>%
filter(packsize_aug<3) %>%
summarize(mean_packsize = mean(packsize_aug)) %>%
wolves %>%
filter(packsize_aug<3) %>%
summarize(mean_packsize = mean(packsize_aug))
library("tidyverse")
library("janitor")
wolves <- read.csv("data/NPS_wolfmortalitydata.csv", na = c("NULL")) %>% clean_names()
names(wolves)
glimpse(wolves) # information dense summary of data
table(wolves$park)
wolves %>%
arrange(desc(packsize_aug))
wolves %>%
select(park, mort_all) %>%
arrange(park)
ynp <- wolves %>%
filter(park=="YNP")
ynp %>%
filter(biolyr>=1997 & biolyr<=2010) %>%
filter(pack=="druid") %>%
summarize(mean_pack_size = mean(packsize_aug))
#select(ynp, packsize_aug) %>%
#filter(pack=="druid")
#filter(biolyr>=1997 & biolyr<=2010) %>%
#filter(pack=="druid")
#summarize(mean_pack_size = mean(packsize_aug))
View(ynp) #I viewed by name druid in the packs variable and looked at packsizeAug to determine the size.
ynp %>%
filter(biolyr>=1995 & biolyr<=2021) %>%
group_by(pack) %>%
summarize(persistence=sum(persisty1, na.rm=T)) %>%
arrange(desc(persistence))
wolves %>%
filter(packsize_aug<3) %>%
summarize(mean_packsize = mean(packsize_aug))
#select(ynp, packsize_aug) %>%
#filter(pack=="druid")
#filter(biolyr>=1997 & biolyr<=2010) %>%
#filter(pack=="druid")
#summarize(mean_pack_size = mean(packsize_aug))
view(ynp) #I viewed by name druid in the packs variable and looked at packsizeAug to determine the size.
library("tidyverse")
library("janitor")
wolves <- read.csv("data/NPS_wolfmortalitydata.csv", na = c("NULL")) %>% clean_names()
names(wolves)
glimpse(wolves) # information dense summary of data
table(wolves$park)
wolves %>%
arrange(desc(packsize_aug))
wolves %>%
select(park, mort_all) %>%
arrange(park)
ynp <- wolves %>%
filter(park=="YNP")
ynp %>%
filter(biolyr>=1997 & biolyr<=2010) %>%
filter(pack=="druid") %>%
summarize(mean_pack_size = mean(packsize_aug))
#select(ynp, packsize_aug) %>%
#filter(pack=="druid")
#filter(biolyr>=1997 & biolyr<=2010) %>%
#filter(pack=="druid")
#summarize(mean_pack_size = mean(packsize_aug))
#view(ynp) #I viewed by name druid in the packs variable and looked at packsizeAug to determine the size.
ynp %>%
filter(biolyr>=1995 & biolyr<=2021) %>%
group_by(pack) %>%
summarize(persistence=sum(persisty1, na.rm=T)) %>%
arrange(desc(persistence))
wolves %>%
filter(packsize_aug<3) %>%
summarize(mean_packsize = mean(packsize_aug))
