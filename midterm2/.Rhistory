q+scale_colour_brewer(palette = "PuBuGn")
p+scale_fill_brewer(palette = "Paired")+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(na.rm=T, position="dodge")
#store a plot as an object!
p + theme_linedraw()+ #take p + the theme linedraw
theme(axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q <- homerange %>%
ggplot(aes(x=log10.mass, y=log10.preymass, color=taxon))+
geom_point(na.rm = T)
q
#fill doesn't work in scatterplot
q+theme_classic()
q+theme_minimal() #another thing to do
p+theme_linedraw()+
theme(legend.position = "bottom", #legend.position puts the legend at the bottom (left, right, top etc.); this is aesthetic choice
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL, #removes label from the x-axis "NULL"
y= "n",
fill= "Trophic Guild")
#install.packages("ggthemes")
library(ggthemes)
#ls("package:ggthemes")[grepl("theme_", ls("package:ggthemes"))]
p +
theme_fivethirtyeight()+ #this is the modified line
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p +
theme_economist()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
?RColorBrewer
display.brewer.pal(12,"BuPu") #sequential palette ; the number corresponds to the amount of shades
p+scale_fill_brewer(palette = "Paired")+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q+scale_colour_brewer(palette = "PuBuGn")
colors <- paletteer::palettes_d_names
my_palette <- paletteer_d("ggsci::nrc_npg") #store your palette
#remove ggsi and then add package and palettes as provided above
#nrc is equal to package and palette is npg
barplot(rep(1,6), axes=FALSE, col=my_palette)
p+scale_fill_manual(values=my_palette)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q+theme_classic()+scale_color_manual(values = my_palette)
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_wrap(~trophic.guild) #new ; split the plot into two automatically in columns
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(trophic.guild~.) #new ; ~ means across now this is all in rows  ; if put .~ at the beginning it changes
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(~trophic.guild~thermoregulation)+ #new ; split the plot into two automatically
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_wrap(~trophic.guild) +
theme(axis.text.x = element_text(angle = 60, hjust=1))
library("tidyverse")
library("janitor")
life_history <- read_csv("data/mammal_lifehistories_v2.csv", na="-999") %>% clean_names()
life_history %>%
count(order, sort = T) %>% #this is the same as arrange ; count allows produce x & y
ggplot(aes(x=order, y=n))+
geom_col()+ #allows specify x and y
coord_flip()
life_history %>%
ggplot(aes(x=order))+ #counting observations in the categorical variable order
geom_bar()+
coord_flip()
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x = order, y = mean_mass))+ #by default coordinates don't need to be specified
geom_col()+
coord_flip()
options(scipen=999)#cancels scientific notation for the session
life_history %>%
group_by(order) %>%
summarize(mean_mass = mean(mass, na.rm = T)) %>%
ggplot(aes(x=reorder(order, mean_mass), y=mean_mass))+ ##fix this error
geom_col()+
coord_flip()+
scale_y_log10()
##DOUBLE CHECK THIS
life_history %>%
group_by(order) %>%
summarize(mean_mass=mean(mass, na.rm=T)) %>%
ggplot(aes(x=reorder(order, mean_mass), y=mean_mass))+ #reorder the x-axis
geom_col()+
coord_flip()+
scale_y_log10()
life_history %>%
ggplot(aes(x=gestation, y=wean_mass))+
geom_jitter(na.rm = T)+ #prevents overplotting
scale_y_log10() #add this at the end for the outlier before including this line
elephants <- read_csv("data/elephantsMF.csv") %>% clean_names()
elephants %>%
ggplot(aes(x=age, y=height))+
geom_point()+
geom_smooth(method = lm, se = F)+ #method is linear model, dont show standard error
labs(title = "Elephant Age vs. Height",
x = "Age (years)",
y = "Height (cm)")+
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5)) #relative makes everything bigger. hjust goes left when 0 and hjust goes to the right when hjust is 1
elephants %>%
ggplot(aes(x=sex, fill=sex))+ #fill is a grouping option
geom_bar()
life_history %>%
ggplot(aes(x=gestation, y=log10(mass), size=mass))+ #added log10 to nest within the ggplot function; size is relative to the mass being plotted.
#The biggest mass is the biggest dot
geom_point(na.rm=T)
library(tidyverse)
library(janitor)
library(palmerpenguins)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <-
read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
homerange %>% count(taxon, sort=T) #counts observations in taxon
#there are 9 different taxa
homerange %>%
ggplot(aes(x=taxon))+
geom_bar()+
coord_flip()+
labs(title = "Observations by Taxon",
x = "Taxonomic Group")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+ #now we can see proportion of carnivores and herbivores
geom_bar()+
coord_flip()+
labs(title = "Observations by Taxon",
x = "Taxonomic Group")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(position="dodge")+ #this now gives the side by side
coord_flip()+
labs(title = "Observations by Taxon",
x = "Taxonomic Group")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(position="dodge")+ #this now gives the side by side
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "Observations by Taxon",
x = "Taxonomic Group")
penguins %>%
ggplot(aes(x = island, fill = species))+
geom_bar()+
labs(title = "Counts of Individuals by Island",
x = "Island",
fill = "Species")
penguins %>%
ggplot(aes(x = island, fill=species))+
geom_bar(position = "dodge")+
labs(title = "Counts of Individuals by Island",
x = "Island",
fill = "Species")
penguins %>%
#filter(sex!="NA") %>% # this removes the NA's
ggplot(aes(x=island, fill=sex))+
geom_bar(position="dodge")+
labs(title="Counts of Individuals by Island",
x="Island",
fill="Penguin Species")
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv("data/surveys_complete.csv")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
homerange %>%
ggplot(data=homerange,
mapping=aes(x = class, y=log10.mass))+
geom_boxplot()
#make simple boxplot of class vs. log10mass
homerange %>%
ggplot(data=homerange,
mapping=aes(x = class, y=log10.mass, fill=class))+
geom_boxplot()
#fill by class (same catergorical variable plotting by) & just add color
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram()+ #we can adjust the number of bins with the bins argument (put bins = 30 in parentheses and mess with the # )
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(color = "seagreen", fill = "steelblue1", bins=10)+
labs(title = "Distribution of Body Mass")
#Color is the outline and fill is the color
homerange %>%
ggplot(aes(x = log10.hra)) +
geom_histogram(color="black", fill="violetred", alpha=0.5)+ #we can adjust the number of bins with the bins argument (put bins = 30 in parentheses and mess with the # )
labs(title = "Distribution of HomeRange")
homerange %>%
select(log10.mass) %>% #this is a continuous variable
summarize(min=min(log10.mass),
max= max(log10.mass))
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75 ~ "small",#mass_category is the new variable; put log10.mass into new value small in mass_category
log10.mass>1.75 & log10.mass <=2.75 ~ "medium",
log10.mass>2.75 ~ "large")) %>%
ggplot(aes(x=mass_category, fill=trophic.guild))+
geom_bar(position = "dodge") #puts it side by side
#Note: the variable log10.mass is continuous
summary(homerange$log10.hra)
library(gtools)
#install.packages("gtools")
quartiles <- quantcut(homerange$log10.hra) #quantcut is function in gtools
table(quartiles)
#gives quartiles and sample size
homerange %>%
mutate(range_category=case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small",
log10.hra>4.59 & log10.hra<=6.02 ~ "medium",
log10.hra>=6.02 ~ "large"))#range_category is a new variable
#continuous variable converted to categorical!
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(na.rm=T, position="dodge")
#store a plot as an object!
colors <- paletteer::palettes_d_names
my_palette <- paletteer_d("ggsci::nrc_npg") #store your palette
#remove ggsi and then add package and palettes as provided above
#nrc is equal to package and palette is npg
barplot(rep(1,6), axes=FALSE, col=my_palette)
p+scale_fill_manual(values=my_palette)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("janitor")
library("naniar")
library("tidyverse")
library("janitor")
library("naniar")
surgery <- read_csv("data/surgery.csv")
surgery <- read_csv("data/surgery.csv")
glimpse(surgery)
is.na(surgery)
tabyl(surgery)
table(surgery)
miss_var_summary(surgery)
surgery %>%
map_df(~ sum(is.na(.)))
names(surgery)
surgery %>%
count(race)
ggplot(data=surgery, #specify the data
mapping=aes(x=race, y=n))+ #map the aesthetics
geom_boxplot()
surgery %>%
ggplot(aes(x=race)) + #there is only one variable in this plot. noteL the x= is not needed.
geom_bar()
surgery %>%
naniar::miss_var_summary()
surgery %>%
ggplot(aes(x=race, fill=race))+ #there is only one variable in this plot. noteL the x= is not needed.
geom_bar(alpha=0.6, color="steelblue3")+
labs(title = "Participants by Race", x=NULL, y= "# of Participants")+
theme_light()
surgery %>%
ggplot(aes(x=race, fill=race))+ #there is only one variable in this plot. noteL the x= is not needed.
geom_bar(alpha=0.6, color="black")+
labs(title = "Participants by Race", x=NULL, y= "# of Participants")+
theme_light()
surgery %>%
filter(gender!="NA") %>%  #remove the participants who have not indicated gender
group_by(gender) %>%
summarize(mean_age = mean(age, na.rm = T))
surgery %>%
ggplot(aes(x = age, y = gender)) +
geom_boxplot()
surgery %>%
filter(gender!="NA") %>%
ggplot(aes(x=gender, y=age, fill=gender))+
geom_boxplot(na.rm = T, alpha=0.6)+#good for range
labs(title = "Range of Participants Age by Gender",
x=NULL,
y="Age (years)")+
theme_light()
surgery %>%
filter(asa_status!="NA") %>%
ggplot(aes(x=asa_status, fill=asa_status))+
geom_bar(color="black", alpha=0.6)+
labs(title = "ASA Status of Participants", x = "ASA", y="# Participants")+
theme_light()
surgery %>%
#filter(asa_status!="NA") %>%
ggplot(aes(x=asa_status, fill=asa_status))+
geom_bar(color="black", alpha=0.6)+
labs(title = "ASA Status of Participants", x = "ASA", y="# Participants")+
theme_light()
surgery %>%
filter(asa_status!="NA") %>%
ggplot(aes(x=asa_status, fill=asa_status))+
geom_bar(color="black", alpha=0.6)+
labs(title = "ASA Status of Participants", x = "ASA", y="# Participants")+
theme_light()
surgery %>%
#filter(asa_status!="NA") %>%
ggplot(aes(x=asa_status, fill=asa_status))+
geom_bar(color="black", alpha=0.6)+
labs(title = "ASA Status of Participants", x = "ASA", y="# Participants")+
theme_light()
surgery %>%
filter(asa_status!="NA") %>%
ggplot(aes(x=asa_status, fill=asa_status))+
geom_bar(color="black", alpha=0.6)+
labs(title = "ASA Status of Participants", x = "ASA", y="# Participants")+
theme_light()
View(surgery)
surgery %>%
ggplot(aes(x=asa_status, y=bmi))+
geom_boxplot()+
facet_wrap(~bmi) #new ; split the plot into two automatically in columns
surgery %>%
ggplot(aes(x=asa_status))+
geom_density(fill="steelblue", color="black", alpha=0.6, na.rm = T)+
facet_wrap(~asa_status)+ #new ; split the plot into two automatically in columns
labs(title = "Distribution of BMI", x="BMI", y=NULL)+
theme_light()+
theme(axis.text.x = element_text(angle = 60, hjust=1))
surgery %>%
ggplot(aes(x=asa_status))+
geom_density(fill="steelblue", color="black", alpha=0.6, na.rm = T)+
facet_wrap(~asa_status)+ #new ; split the plot into two automatically in columns
labs(title = "Distribution of BMI", x="BMI", y=NULL)+
theme_light()+
#theme(axis.text.x = element_text(angle = 60, hjust=1))
surgery %>%
ggplot(aes(x=asa_status))+
geom_density(fill="steelblue", color="black", alpha=0.6, na.rm = T)+
facet_wrap(~asa_status)+ #new ; split the plot into two automatically in columns
labs(title = "Distribution of BMI", x="BMI", y=NULL)+
theme_light()
#theme(axis.text.x = element_text(angle = 60, hjust=1))
surgery %>%
group_by(ahrq_ccs) %>%
summarise(ccsmort30rate=mean(ccsmort30rate)) %>%
arrange(desc(ccsmort30rate)) %>%
slice_max(ccsmort30rate, n=5) #REVIEW SLICE
surgery %>%
group_by(ahrq_ccs) %>%
summarise(ccscomplicationrate=mean(ccscomplicationrate)) %>%
arrange(desc(ccscomplicationrate)) %>%
slice_max(ccscomplicationrate, n=5)
surgery %>%
select(ahrq_ccs, ccsmort30rate, ccscomplicationrate) %>%
filter(ahrq_ccs %in% c("Colorectal resection", "Small bowel resection", "Gastrectomy; partial and total", "Endoscopy and endoscopic biopsy of the urinary tract", "Spinal fusion", "Nephrectomy; partial or complete")) %>%
group_by(ahrq_ccs) %>%
summarise(ccsmort30rate=mean(ccsmort30rate),
ccscomplicationrate=mean(ccscomplicationrate))
surgery %>%
ggplot(aes(x=ahrq_ccs, y=ccsmort30rate, group=ahrq_ccs))+
geom_col(position="dodge", fill="steelblue", alpha=0.6)+
coord_flip()+
labs(title="30-Day Mortality by Procedure",
x=NULL,
y="Rate")+
theme_light()
surgery_new <- surgery %>%
mutate(mort30_n = ifelse(mort30 == "Yes", 1, 0),
complication_n = ifelse(complication =="Yes", 1, 0)) %>%
group_by(month) %>%
summarise(n_deaths=sum(mort30_n),
n_comp=sum(complication_n))
surgery_new
surgery %>% tabyl(month, mort30)
surgery %>% tabyl(month, complication)
surgery_new %>%
ggplot(aes(x=month, y=n_deaths))+
geom_col(alpha=0.8, fill="steelblue", color="black")+
labs(title="30-Day Mortality by Month",
x=NULL,
y="Rate")+
scale_x_discrete(limits=c("Jan","Feb","Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))+
theme_light()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(skimr)
library(naniar)
library(visdat)
library(here)
library(palmerpenguins)
library(RColorBrewer)
library(paletteer)
options(scipen=999) #cancels the use of scientific notation for the session
print(penguins)
penguins %>%
filter(species=="Adelie") %>%
summarize(mean_bill_length=mean(bill_length_mm, na.rm = T),
mean_bill_depth=mean(bill_depth_mm, na.rm = T),
mean_flippper_length=mean(flipper_length_mm, na.rm = T),
mean_body_mass=mean(body_mass_g, na.rm = T),
n=n())
penguins %>%
summarize(distinct_species = n_distinct(species),
distinct_island = n_distinct(island),
distinct_sex = n_distinct(sex))
penguins %>%
summarize(across(c(species, island, sex), n_distinct))
penguins %>%
summarize(across(contains("mm"), mean, na.rm=T))
heartrate <- read_csv("data/heartrate.csv")
colors <- paletteer::palettes_d_names
colors
my_palette <- paletteer_d("vangogh::SunflowersMunich")
barplot(rep(1,6), axes=FALSE, col=my_palette)
