knitr::opts_chunk$set(echo = FALSE)
library("jpeg")
install.packages("naniar")
library("naniar")
library("tidyverse")
library("janitor")
wolves <- read.csv("data/NPS_wolfmortalitydata.csv", na = c("NULL")) %>% clean_names()
table(wolves$park)
library("tidyverse")
library("skimr")
library("janitor")
library("palmerpenguins")
?penguins
penguins %>%
group_by(island) %>%
summarize(mean_body_mass_g=mean(body_mass_g, na.rm=T)) # remember to remove those NA's!
penguins %>%
group_by(island) %>%
summarize(mean_body_mass_g=mean(body_mass_g, na.rm=T)) # remember to remove those NA's!
penguins %>%
group_by(island, species) %>%
summarize(n_penguins=n(), .groups = 'keep')
penguins %>%
count(island, species)
penguins %>%
tabyl(island, species)
penguins %>%
group_by(sex) %>%
summarize(across(contains("mm"), mean, na.rm=T))
penguins %>%
filter(species=="Adelie") %>%
select(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g) %>%
summarize(mean_bill_length_mm = mean(bill_length_mm, na.rm=T), (mean_depth_length_mm = mean(bill_depth_mm, na.rm=T),(mean_flipper_length_mm= mean(flipper_length_mm, na.rm=T), (mean_body_mass_g = mean(body_mass_g, na.rm=T) )
penguins %>%
filter(species=="Adelie") %>%
select(bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g) %>%
summarize(mean_bill_length_mm = mean(bill_length_mm, na.rm=T), (mean_depth_length_mm = mean(bill_depth_mm= na.rm=T),(mean_flipper_length_mm= mean(flipper_length_mm, na.rm=T), (mean_body_mass_g = mean(body_mass_g, na.rm=T) )
penguins %>%
group_by(species) %>%  #because comparing species
summarize(mean_bill_length_mm = mean(bill_length_mm, na.rm=T))
penguins %>%
filter(is.na(sex))
penguins %>%
summarize(distinct_species = n_distinct(species),
distinct_island = n_distinct(island),
distinct_sex = n_distinct(sex))
penguins %>%
summarize(across(c(species, island, sex), n_distinct))
penguins %>%
summarize(across(contains("mm"), mean, na.rm=T))
penguins %>%
group_by(sex) %>%
summarize(across(contains("mm"), mean, na.rm=T))
penguins %>%
summarise_all(n_distinct)
penguins %>%
summarize(across(!c(species, island, sex, year), #summarize across all the variables that are not
mean, na.rm=T))
penguins %>%
summarise(across(starts_with("bill"), n_distinct))
names(penguins)
penguins %>%
group_by(species) %>%
summarize(across(c(contains("mm"), body_mass_g), mean, na.rm=T),
n_samples=n())
library("tidyverse")
library("naniar")
library("skimr")
library("janitor")
library("tidyverse")
library("naniar")
library("skimr")
library("janitor")
life_history <- read_csv("data/mammal_lifehistories_v3.csv") %>% clean_names()
glimpse(life_history)
summary(life_history)
life_history %>%
map_df(~ sum(is.na(.))) #tell where all the NAs are
life_history %>%
contains("-999")
life_history %>%
across(contains("-999"))
life_history %>%
mutate(across(contains("NA")))
life_history %>%
mutate(across(contains(-999)))
life_history %>%
mutate(across(contains("-999")))
life_history %>%
replace_with_na(replace = list(x=-999))
life_history <- read_csv("data/mammal_lifehistories_v3.csv", na= c("NA", " ", ".", "-999", "not measured")) %>% clean_names()#you can only do this once you found it
naniar::miss_var_summary(life_history) #use naniar package and get a missing variable summary of the life_history
hist(life_history$max_life)
life_history <-
life_history %>%
mutate(max_life=na_if(max_life, 0))
miss_var_summary(life_history)
life_history %>%
group_by(order) %>%
select(order, wean_mass) %>%
miss_var_summary(order=T)
life_history %>%
replace_with_na(replace = list(newborn = "not measured",
weaning= -999,
wean_mass= -999,
afr= -999,
max_life= 0,
litter_size= -999,
gestation= -999,
mass= -999)) %>%
miss_var_summary()
cites <- read_csv("data/cites.csv")
cites <- read_csv("data/cites.csv") %>% clean_names()
miss_var_summary(cites)
cites %>%
select(class, exporter_reported_quantity) %>%
group_by(class) %>%
miss_var_summary() %>%
arrange(desc())
cites %>%
select(class, exporter_reported_quantity) %>%
group_by(class) %>%
miss_var_summary() %>%
arrange(desc(pct_miss))
cites %>%
select(class, exporter_reported_quantity) %>%
group_by(class) %>%
miss_var_summary() %>%
arrange(desc(pct_miss))
library(visdat)
vis_dat(life_history) #classes of data
vis_miss(life_history)
