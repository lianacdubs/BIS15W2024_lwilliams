library("tidyverse")
library("janitor")
superhero_info <- read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
superhero_info <- clean_names(superhero_info)
tabyl(superhero_info, Alignment)
tabyl(superhero_info, alignment)
superhero_info %>%
tabyl(Publisher)
tabyl(superhero_info,publisher)
filter(superhero_info, Alignment == "neutral")
superhero_info %>%
select(name, alignment) %>%
filter(alignment=="neutral")
superhero_info %>%
select(name, alignment) %>%
superhero_info %>%
#select(name, alignment) %>%
#filter(alignment=="neutral")
superhero_info %>%
select(name, alignment) %>%
#filter(alignment=="neutral")
superhero_info %>%
select(name, alignment)
#filter(alignment=="neutral")
superhero_info %>%
select(name, alignment) #Shows the name and alignment columns
filter(alignment=="neutral")
superhero_info %>%
select(name, alignment) %>%  #Shows the name and alignment columns
filter(alignment=="neutral")
superhero_info %>%
select(name, Alignment, Race) %>%
arrange(superhero_info)
superhero_info %>%
select(name, alignment, race) %>%
arrange(superhero_info)
superhero_info %>%
select(name, alignment, race) %>% #shows the columns for name, alignment, and race
arrange(superhero_info)
select(superhero_info, name, alignment, race)
filter(superhero_info, race!="Human")
good_guys <- filter(superhero_info, alignment=="good")
good_guys
bad_guys <- filter(superhero_info, alignment=="bad")
bad_guys
tabyl(good_guys, race)
filter(good_guys, race=="Vampire")
filter(bad_guys, height>200, race=="Human", gender=="Male")
dim(filter(bad_guys, hair_color=="Green"))
dim(filter(good_guys, hair_color=="Green"))
superhero_info %>%
filter(weight<50) %>%
arrange(weight)
superhero_info %>%
mutate(height_weight_ratio = height/weight) %>%
arrange(height_weight_ratio)
superhero_powers <- clean_names(superhero_powers)
dim(filter(superhero_powers, agility=="TRUE", stealth=="TRUE",super_strength=="TRUE",stamina=="TRUE"))
filter(superhero_powers, hero_name=="Groot")
filter(superhero_powers, hero_names=="Groot")
filter(superhero_info, name=="Groot")
superhero_powers <- clean_names(superhero_powers)
superhero_info %>%
#select(name, alignment) %>%  #Shows the name and alignment columns
filter(alignment=="neutral") #Only gives the "neutral" alignment
#Note: You can also remove the select function
superhero_info %>%
select(name, alignment) %>%  #Shows the name and alignment columns
filter(alignment=="neutral") #Only gives the "neutral" alignment
#Note: You can also remove the select function
superhero_info %>%
filter(race != "Human")
good_guys <- superhero_info %>%
filter(alignment=="good")
good_guys <- superhero_info %>%
filter(alignment=="good")
bad_guys <- superhero_info %>%
filter(alignment=="bad")
good_guys %>%
tabyl(race)
good_guys %>%
filter(race=="Vampire")
bad_guys %>%
filter(race=="Human") %>%
filter(height>=200)
good_guys %>%
filter(hair_color == "Green")
bad_guys %>%
filter(hair_color == "Green")
superhero_info %>%
filter(weight<50) %>%
arrange(weight) #sorts the weight from lowest to highest
#This method also works
height_weight_ratio <- superhero_info %>%
select(name, height, weight)
height_weight_ratio %>%
mutate(ratio = height/weight) %>%
arrange(desc(ratio))
#Check: height = 62.5 and weight = 630 then, height/weight = 0.099 :)
names(superhero_powers)
superhero_powers %>%
select(agility, stealth, super_strength, stamina) %>%
filter(agility==T) %>%
filter(stealth==T) %>%
filter(super_strength==T) %>%
filter(stamina==T)
superhero_powers %>%
filter(hero_names=="Groot")
superhero_info %>%
filter(name=="Groot")
bad_guys %>%
filter(race=="Human") %>%
filter(gender =="Male")
filter(height>200)
bad_guys <- superhero_info %>%
filter(alignment=="bad") #dataframe for bad guys
bad_guys %>%
filter(race=="Human") %>%
filter(gender =="Male")
filter(height>200)
names(groot_powers)
groot_powers <- superhero_powers %>%
filter(hero_names=="Groot") %>%
select_if(.==TRUE)
groot_powers
names(groot_powers)
library("tidyverse")
library("janitor")
superhero_info <- read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
superhero_info <- clean_names(superhero_info)
superhero_powers <- clean_names(superhero_powers)
tabyl(superhero_info, alignment)
superhero_info %>%
tabyl(publisher)
#tabyl(superhero_info,publisher) another method
superhero_info %>%
select(name, alignment) %>%  #Shows the name and alignment columns
filter(alignment=="neutral") #Only gives the "neutral" alignment
superhero_info %>%
select(name, alignment, race) %>% #shows the columns for name, alignment, and race
arrange(superhero_info)
#select(superhero_info, name, alignment, race)
#This is another solution for getting the variables we are interested in without involving a pipe.
superhero_info %>%
filter(race != "Human")
#filter(superhero_info, race!="Human")
#This is another way to do the problem not involving a pipe. This looks within race column and returns the entire superhero_info table and all the "races" that are NOT human.
good_guys <- superhero_info %>%
filter(alignment=="good") #dataframe for good guys
bad_guys <- superhero_info %>%
filter(alignment=="bad") #dataframe for bad guys
#good_guys <- filter(superhero_info, alignment=="good")
#good_guys
#This method doesn't involve pipes
#bad_guys <- filter(superhero_info, alignment=="bad")
#bad_guys
#This method doesn't involve pipes
good_guys %>%
tabyl(race)
#tabyl(good_guys, race)
#this method doesn't involve pipes
good_guys %>%
filter(race=="Vampire")
#filter(good_guys, race=="Vampire")
#This method doesn't use pipes
bad_guys %>%
filter(race=="Human") %>%
filter(gender =="Male")
filter(height>200)
superhero_info <- clean_names(superhero_info)
superhero_powers <- clean_names(superhero_powers)
tabyl(superhero_info, alignment)
superhero_info %>%
tabyl(publisher)
superhero_info %>%
select(name, alignment) %>%  #Shows the name and alignment columns
filter(alignment=="neutral") #Only gives the "neutral" alignment
bad_guys %>%
filter(race=="Human") %>%
filter(gender =="Male")
filter(height>200)
bad_guys %>%
filter(race=="Human") %>%
filter(gender =="Male")
filter(height>=200)
bad_guys %>%
filter(race=="Human") %>%
filter(gender =="Male")
filter(height=>200)
bad_guys %>%
filter(race=="Human") %>%
filter(gender =="Male") %>%
filter(height > 200)
superhero_info %>%
filter(weight<50) %>%
arrange(weight) #sorts the weight from lowest to highest
library("tidyverse")
library("janitor")
superhero_info <- read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
superhero_info <- clean_names(superhero_info)
superhero_powers <- clean_names(superhero_powers)
tabyl(superhero_info, alignment)
superhero_info %>%
tabyl(publisher)
#tabyl(superhero_info,publisher) another method
superhero_info %>%
select(name, alignment) %>%  #Shows the name and alignment columns
filter(alignment=="neutral") #Only gives the "neutral" alignment
superhero_info %>%
select(name, alignment, race) %>% #shows the columns for name, alignment, and race
arrange(superhero_info)
#select(superhero_info, name, alignment, race)
#This is another solution for getting the variables we are interested in without involving a pipe.
superhero_info %>%
filter(race != "Human")
#filter(superhero_info, race!="Human")
#This is another way to do the problem not involving a pipe. This looks within race column and returns the entire superhero_info table and all the "races" that are NOT human.
good_guys <- superhero_info %>%
filter(alignment=="good") #dataframe for good guys
bad_guys <- superhero_info %>%
filter(alignment=="bad") #dataframe for bad guys
#good_guys <- filter(superhero_info, alignment=="good")
#good_guys
#This method doesn't involve pipes
#bad_guys <- filter(superhero_info, alignment=="bad")
#bad_guys
#This method doesn't involve pipes
good_guys %>%
tabyl(race)
#tabyl(good_guys, race)
#this method doesn't involve pipes
good_guys %>%
filter(race=="Vampire")
#filter(good_guys, race=="Vampire")
#This method doesn't use pipes
bad_guys %>%
filter(race=="Human") %>%
filter(gender =="Male") %>%
filter(height > 200)
#filter(bad_guys, height>200, race=="Human", gender=="Male")
#This code doesn't involve pipes.
good_guys %>%
filter(hair_color == "Green")
#Good guys with green hair
bad_guys %>%
filter(hair_color == "Green")
#Bad guys with green hair
#dim(filter(bad_guys, hair_color=="Green"))
#dim(filter(good_guys, hair_color=="Green"))
superhero_info %>%
filter(weight<50) %>%
arrange(weight) #sorts the weight from lowest to highest
superhero_info %>%
mutate(height_weight_ratio = height / weight)
#Adds a new column for the variable height_weight_ratio
height_weight_ratio %>%
mutate(ratio = height/weight) %>%
arrange(desc(ratio))
height_weight_ratio %>%
mutate(height_weight_ratio = height/weight) %>%
arrange(desc(height_weight_ratio))
superhero_info %>%
mutate(height_weight_ratio = height/weight) %>%
arrange(desc(height_weight_ratio))
superhero_info %>%
mutate(height_weight_ratio = height/weight) %>%
arrange(desc(height_weight_ratio))
superhero_info %>%
mutate(height_weight_ratio = height/weight) %>%
arrange(desc(height_weight_ratio))
height_weight_ratio <- superhero_info %>%
select(name, height, weight)
height_weight_ratio %>%
mutate(ratio = height/weight) %>%
arrange(desc(ratio))
library("tidyverse")
library("janitor")
superhero_info <- read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
superhero_info <- clean_names(superhero_info)
superhero_powers <- clean_names(superhero_powers)
tabyl(superhero_info, alignment)
superhero_info %>%
tabyl(publisher)
#tabyl(superhero_info,publisher) another method
superhero_info %>%
select(name, alignment) %>%  #Shows the name and alignment columns
filter(alignment=="neutral") #Only gives the "neutral" alignment
superhero_info %>%
select(name, alignment, race) %>% #shows the columns for name, alignment, and race
arrange(superhero_info)
#select(superhero_info, name, alignment, race)
#This is another solution for getting the variables we are interested in without involving a pipe.
superhero_info %>%
filter(race != "Human")
#filter(superhero_info, race!="Human")
#This is another way to do the problem not involving a pipe. This looks within race column and returns the entire superhero_info table and all the "races" that are NOT human.
good_guys <- superhero_info %>%
filter(alignment=="good") #dataframe for good guys
bad_guys <- superhero_info %>%
filter(alignment=="bad") #dataframe for bad guys
#good_guys <- filter(superhero_info, alignment=="good")
#good_guys
#This method doesn't involve pipes
#bad_guys <- filter(superhero_info, alignment=="bad")
#bad_guys
#This method doesn't involve pipes
good_guys %>%
tabyl(race)
#tabyl(good_guys, race)
#this method doesn't involve pipes
good_guys %>%
filter(race=="Vampire")
#filter(good_guys, race=="Vampire")
#This method doesn't use pipes
bad_guys %>%
filter(race=="Human") %>%
filter(gender =="Male") %>%
filter(height > 200)
#filter(bad_guys, height>200, race=="Human", gender=="Male")
#This code doesn't involve pipes.
good_guys %>%
filter(hair_color == "Green")
#Good guys with green hair
bad_guys %>%
filter(hair_color == "Green")
#Bad guys with green hair
#dim(filter(bad_guys, hair_color=="Green"))
#dim(filter(good_guys, hair_color=="Green"))
superhero_info %>%
filter(weight<50) %>%
arrange(weight) #sorts the weight from lowest to highest
height_weight_ratio <- superhero_info %>%
select(name, height, weight)
#Adds a new column for the variable height_weight_ratio
height_weight_ratio %>%
mutate(ratio = height/weight) %>%
arrange(desc(ratio))
#Check: height = 62.5 and weight = 630 then, height/weight = 0.099 :)
names(superhero_powers)
superhero_powers %>%
select(agility, stealth, super_strength, stamina) %>%
filter(agility==T) %>%
filter(stealth==T) %>%
filter(super_strength==T) %>%
filter(stamina==T)
#superhero_powers <- clean_names(superhero_powers)
#dim(filter(superhero_powers, agility=="TRUE", stealth=="TRUE",super_strength=="TRUE",stamina=="TRUE"))
#This method works without pipes
#unique_superheros <- superhero_powers %>%
#filter(agility=="TRUE", stealth=="TRUE",super_strength=="TRUE",stamina=="TRUE")
#^shows "TRUE" if superhero has all of these
#select(hero_names, agility, stealth, super_strength, stamina)
#unique_superheros
#dim(unique_superheros)
#Another way to solve the problem!
groot_powers <- superhero_powers %>%
filter(hero_names=="Groot") %>%
select_if(.==TRUE)
groot_powers
names(groot_powers)
#filter(superhero_powers, hero_names=="Groot")
#This is a way to do it without pipes
superhero_info %>%
filter(name=="Groot")
#filter(superhero_info, name=="Groot")
#This is another way to do it without pipes
