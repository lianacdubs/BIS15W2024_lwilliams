library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(na.rm=T, position="dodge")
p + theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
install.packages("RColorBrewer")
install.packages("paletteer")
install.packages("ggthemes")
install.packages("RColorBrewer")
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv("data/surveys_complete.csv")
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
homerange %>%
ggplot(data=homerange,
mapping=aes(x = class, y=log10.mass))+
geom_boxplot()
homerange %>%
ggplot(data=homerange,
mapping=aes(x = class, y=log10.mass, fill=class))+
geom_boxplot()
homerange %>%
ggplot(data=homerange,
mapping=aes(x = class, y=log10.mass, group=taxon))+
geom_boxplot()
homerange %>%
ggplot(data=homerange,
mapping=aes(x = class, y=log10.mass, group=taxon))+
geom_boxplot()
homerange %>%
ggplot(data=homerange,
mapping=aes(x = class, y=log10.mass, fill=taxon))+
geom_boxplot()
deserts %>%
filter(species_id=="DM" | species_id=="DS")
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>% #interested in two variables use filter
mutate(year=as.factor(year)) %>%  #shortcut: change the year variable to a factor; because year as a numeric is complicated because they represent individual sampling points and not continuous numeric
group_by(year, species_id) %>%
summarize(n=n(), .groups = 'keep')
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>% #interested in two variables use filter
mutate(year=as.factor(year)) %>%  #shortcut: change the year variable to a factor; because year as a numeric is complicated because they represent individual sampling points and not continuous numeric
group_by(year, species_id) %>%
summarize(n=n(), .groups = 'keep') %>%
pivot_wider(names_from = species_id, values_from = n)
#we are interested in how sampling has changed over time.
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>% #interested in two variables use filter
mutate(year=as.factor(year)) %>%  #shortcut: change the year variable to a factor; because year as a numeric is complicated because they represent individual sampling points and not continuous numeric
group_by(year, species_id) %>%
summarize(n=n(), .groups = 'keep') %>%
ggplot(aes(x=year, y=n, group=species_id, color=species_id))
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>% #interested in two variables use filter
mutate(year=as.factor(year)) %>%  #shortcut: change the year variable to a factor; because year as a numeric is complicated because they represent individual sampling points and not continuous numeric
group_by(year, species_id) %>%
summarize(n=n(), .groups = 'keep') %>%
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>% #interested in two variables use filter
mutate(year=as.factor(year)) %>%  #shortcut: change the year variable to a factor; because year as a numeric is complicated because they represent individual sampling points and not continuous numeric
group_by(year, species_id) %>%
summarize(n=n(), .groups = 'keep') %>%
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=2)+ #new aesthetic; you can experiment with diff shapes
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "Number of Samples for Species DM & DS",
x = "Year",
y = "n")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram()+ #we can adjust the number of bins with the bins argument
labs(title = "Distribution of Body Mass")
grDevices::colors()
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(color = "black", fill = "lavenderblush2", bins=10)+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(color = "black", fill = "steelblue1", bins=10)+
labs(title = "Distribution of Body Mass")
#Color is the outline and fill is the color
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(color = "seagreen", fill = "steelblue1", bins=10)+
labs(title = "Distribution of Body Mass")
#Color is the outline and fill is the color
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_density(fill="deepskyblue4", alpha  =0.4, color = "black")+ #alpha is the transparency
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x=log10.mass)) +
geom_histogram(aes(y = after_stat(density)), fill = "deepskyblue4", alpha = 0.4, color = "black")+ #ignore the y line
geom_density(color = "red")+ #new layer
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.hra)) +
geom_histogram()+ #we can adjust the number of bins with the bins argument (put bins = 30 in parentheses and mess with the # )
labs(title = "Distribution of ")
homerange %>%
ggplot(aes(x = log10.hra)) +
geom_histogram()+ #we can adjust the number of bins with the bins argument (put bins = 30 in parentheses and mess with the # )
labs(title = "Distribution of HRA")
homerange %>%
ggplot(aes(x=log10.hra)) +
geom_histogram(aes(y = after_stat(density)), fill = "deepskyblue4", alpha = 0.4, color = "black")+ #ignore the y line
geom_density(color = "red")+ #new layer
labs(title = "Distribution of hra")
homerange %>%
ggplot(aes(x = log10.hra)) +
geom_histogram(color="black", fill="violetred", alpha(0.5))+ #we can adjust the number of bins with the bins argument (put bins = 30 in parentheses and mess with the # )
labs(title = "Distribution of HRA")
homerange %>%
ggplot(aes(x = log10.hra)) +
geom_histogram(color="black", fill="violetred", alpha=0.5)+ #we can adjust the number of bins with the bins argument (put bins = 30 in parentheses and mess with the # )
labs(title = "Distribution of HRA")
homerange %>%
ggplot(aes(x = log10.hra)) +
geom_histogram(color="black", fill="violetred", alpha=0.5)+ #we can adjust the number of bins with the bins argument (put bins = 30 in parentheses and mess with the # )
labs(title = "Distribution of HomeRange")
homerange %>%
ggplot(aes(x = log10.hra)) +
geom_density(color="black", fill="violetred", alpha=0.5)+ #we can adjust the number of bins with the bins argument (put bins = 30 in parentheses and mess with the # )
labs(title = "Distribution of HomeRange")
homerange %>%
ggplot(aes(x=log10.hra)) +
geom_histogram(aes(y = after_stat(density)), fill = "violet", alpha = 0.4, color = "black")+ #ignore the y line
geom_density(color = "red")+ #new layer
labs(title = "Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra)) +
geom_histogram(aes(y = after_stat(density)), fill = "violet", alpha = 0.4, color = "black")+ #ignore the y line
geom_density(color = "steelblue")+ #new layer
labs(title = "Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra)) +
geom_histogram(aes(y = after_stat(density)), fill = "violet", alpha = 0.2, color = "black")+ #ignore the y line
geom_density(color = "steelblue")+ #new layer
labs(title = "Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra)) +
geom_histogram(aes(y = after_stat(density)), fill = "violet", alpha = 0.8, color = "black")+ #ignore the y line
geom_density(color = "steelblue")+ #new layer
labs(title = "Distribution of Homerange")
homerange %>%
ggplot(aes(x=log10.hra)) +
geom_histogram(aes(y = after_stat(density)), fill = "violet", alpha = 0.8, color = "black")+ #ignore the y line
geom_density(color = "navy")+ #new layer
labs(title = "Distribution of Homerange")
glimpse(homerange)
homerange %>%
select(log10.mass)
homerange %>%
select(log10.mass) %>% #this is a continuous variable
summarize(min=min(log10.mass),
max= max(log10.mass))
summary(homerange$log10.mass)
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75 ~ "small"))#mass_category is the new variable; put log10.mass into new value small
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75 ~ "small",#mass_category is the new variable; put log10.mass into new value small
log10.mass>1.75 & log10.mass <=2.75 ~ "medium",
log10.mass>2.75 ~ "large"))
homerange %>%
mutate(mass_category=case_when(log10.mass<=1.75 ~ "small",#mass_category is the new variable; put log10.mass into new value small in mass_category
log10.mass>1.75 & log10.mass <=2.75 ~ "medium",
log10.mass>2.75 ~ "large")) %>%
ggplot(aes(x=mass_category, fill=trophic.guild))+
geom_bar(position = "dodge") #puts it side by side
summary(homerange$log10.hra)
library(gtools)
#library(gtools)
install.packages("gtools")
library(gtools)
#install.packages("gtools")
library(gtools)
#install.packages("gtools")
quartiles <- quantcut(homerange$log10.hra) #quantcut is function in gtools
table(quartiles)
homerange %>%
mutate(range_category=case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small"
log10.hra>4.59 & log10.hra<=6.02 ~ "medium"
homerange %>%
mutate(range_category=case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small",
log10.hra>4.59 & log10.hra<=6.02 ~ "medium",
log10.hra>6.02 & log10.hra<=9.55 ~ "large"))#range_category is a new variable
homerange %>%
mutate(range_category=case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small",
log10.hra>4.59 & log10.hra<=6.02 ~ "medium",
log10.hra>=6.02 ~ "large"))#range_category is a new variable
homerange %>%
mutate(range_category=case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small",
log10.hra>4.59 & log10.hra<=6.02 ~ "medium",
log10.hra>=6.02 ~ "large")) %>%
ggplot(aes(x=range_category, fill=class))+
geom_bar(position = "dodge", alpha= 0.6. color="black")
homerange %>%
mutate(range_category=case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small",
log10.hra>4.59 & log10.hra<=6.02 ~ "medium",
log10.hra>=6.02 ~ "large")) %>%
ggplot(aes(x=range_category, fill=class))+
geom_bar(position = "dodge", alpha= 0.6, color="black")
homerange %>%
mutate(range_category=case_when(log10.hra<3.65 ~ "very small",
log10.hra>=3.65 & log10.hra<=4.59 ~ "small",
log10.hra>4.59 & log10.hra<=6.02 ~ "medium",
log10.hra>=6.02 ~ "large")) %>%
filter(range_category=="small") %>%
ggplot(aes(x= class, y=log10.mass, fill=class))+
geom_boxplot()
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(na.rm=T, position="dodge")
p + theme_linedraw()+
theme(axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q <- homerange %>%
ggplot(aes(x=log10.mass, y=log10.preymass, color=taxon))+
geom_point()
q <- homerange %>%
ggplot(aes(x=log10.mass, y=log10.preymass, color=taxon))+
geom_point(na.rm = T)
q
q+theme_classic()
q+theme_minimal()
p+theme_linedraw()+
theme(legend.position = "left", #legend.position puts the legend at the bottom
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p+theme_linedraw()+
theme(legend.position = "bottom", #legend.position puts the legend at the bottom
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
install.packages("ggthemes")
library(ggthemes)
ls("package:ggthemes")[grepl("theme_", ls("package:ggthemes"))]
p +
theme_fivethirtyeight()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p +
theme_economist()+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
?RColorBrewer
display.brewer.pal(3,"BuPu") #sequential palette
display.brewer.pal(7,"BuPu") #sequential palette ; the number corresponds to the amount of shades
display.brewer.pal(12,"BuPu") #sequential palette ; the number corresponds to the amount of shades
p+scale_fill_brewer(palette = "Paired")+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p+scale_color_brewer(palette = "PuBu")+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
p+scale_color_brewer(palette = "PuBuGn")+
p+scale_color_brewer(palette = "PuBu")+
q+scale_color_brewer(palette = "PuBu")+
colors <- paletteer::palettes_d_names
barplot(rep(1,6), axes=FALSE, col=my_palette)
my_palette <- paletteer_d("ggsci::nrc_npg") #store your palette
barplot(rep(1,6), axes=FALSE, col=my_palette)
p+scale_fill_manual(values=my_palette)+
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Observations by Taxon in Homerange Data",
x = NULL,
y= "n",
fill= "Trophic Guild")
q+theme_classic()+scale_color_manual(values = my_palette)
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_wrap(~trophic.guild) #new
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(trophic.guild~,) #new ; ~ means across now this is all in rows
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(trophic.guild~.) #new ; ~ means across now this is all in rows
theme(axis.text.x = element_text(angle = 60, hjust=1))
homerange %>%
ggplot(aes(x=taxon, y=log10.mass))+
geom_boxplot()+
facet_grid(~trophic.guild~thermoregulation)+ #new ; split the plot into two automatically
theme(axis.text.x = element_text(angle = 60, hjust=1))
