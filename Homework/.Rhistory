#separate(instnm, into = c("univ", "campus"), sep = "-")
#filter(univ == "University of California" & !campus %in% c("Hastings College of Law", "San Francisco"))
#??????????FIX THIS!
uc_college <- colleges %>%
select(instnm, city, stabbr, zip, adm_rate, sat_avg, pcip26, costt4_a, c150_4_pooled, pftftug1_ef) %>%
uc_college
univ_c_college <- colleges %>%
select(instnm, city, stabbr, zip, adm_rate, sat_avg, pcip26, costt4_a, c150_4_pooled, pftftug1_ef) %>%
univ_c_college
univ_c_college <- colleges %>%
select(instnm, city, stabbr, zip, adm_rate, sat_avg, pcip26, costt4_a, c150_4_pooled, pftftug1_ef) %>%
separate(instnm, into = c("univ", "campus"), sep = "-")
univ_c_college
#filter(univ == "University of California" & !campus %in% c("Hastings College of Law", "San Francisco"))
#??????????FIX THIS!
univ_c_college <- colleges %>%
select(instnm, city, stabbr, zip, adm_rate, sat_avg, pcip26, costt4_a, c150_4_pooled, pftftug1_ef) %>%
separate(instnm, into = c("univ", "campus"), sep = "-") %>%
filter(univ == "University of California" & !campus %in% c("Hastings College of Law", "San Francisco"))
univ_c_college
#filter(univ == "University of California" & !campus %in% c("Hastings College of Law", "San Francisco")
#??????????FIX THIS!
univ_c_college <- colleges %>%
select(instnm, city, stabbr, zip, adm_rate, sat_avg, pcip26, costt4_a, c150_4_pooled, pftftug1_ef) %>%
separate(instnm, into = c("univ", "campus"), sep = "-") %>%
filter(univ == "University of California" & !campus %in% c("Hastings College of Law", "San Francisco"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
colleges <- read_csv("data/ca_college_data.csv")
colleges <- clean_names(colleges)
glimpse(colleges)
anyNA(colleges)
colleges %>%
count(city) %>%
arrange(desc(n))
#colleges %>%
#group_by(city) %>%
#summarise(instnm=n_distinct(instnm)) %>%
#arrange(-instnm)
colleges %>%
group_by(city) %>%
summarise(instnm=n_distinct(instnm)) %>% #summarize by institution name
top_n(10, instnm) %>% #top_n is a function
ggplot(aes(x = city, y = instnm))+
geom_col()+ #use this because we have x and y
coord_flip() #the city names are too long so, flip
#colleges %>%
#count(city) %>%
#top_n(10,n) %>%
#ggplot(aes(y=city, x=n))+
#geom_col()
colleges %>%
filter(costt4_a!="NA") %>%
group_by(city, instnm) %>%
summarise(avg_cost=mean(costt4_a), .groups= 'keep') %>%
arrange(-avg_cost)
#colleges %>%
#group_by(city, instnm) %>%
#summarise(avg_cost = mean(costt4_a, na.rm = T)) %>% #calculates the average annual cost of each institution
#arrange(desc(avg_cost))
colleges %>%
filter(city=="Claremont" | instnm == "University of California-Davis") %>%
ggplot(aes(x=instnm, y=costt4_a))+
geom_col()+
coord_flip()
#colleges %>%
#filter(costt4_a!="NA") %>%
#select(instnm, city, costt4_a) %>%
#top_n(10, instnm) %>%
#ggplot(aes(x=instnm, y=city))+
#geom_col()+
#coord_flip()
ggplot(data = colleges, mapping = aes(x = adm_rate, y = c150_4_pooled))+
geom_point()
colleges %>%
select(adm_rate, c150_4_pooled) %>%
filter(adm_rate!="NA" & c150_4_pooled!="NA") %>%
ggplot(aes(x=adm_rate, y=c150_4_pooled))+
geom_point()+
geom_smooth(method = lm, se=T) #This piece of code has the line
ggplot(data = colleges, mapping = aes(x = costt4_a, y = c150_4_pooled))+
geom_point()
colleges %>%
ggplot(aes(x=costt4_a, y= c150_4_pooled))+
geom_point(na.rm = T)+
geom_smooth(method = lm,se = T) #This code shows the line
univ_c_college <- colleges %>%
select(instnm, city, stabbr, zip, adm_rate, sat_avg, pcip26, costt4_a, c150_4_pooled, pftftug1_ef) %>%
separate(instnm, into = c("univ", "campus"), sep = "-") %>%
filter(univ == "University of California" & !campus %in% c("Hastings College of Law", "San Francisco"))
univ_c_college
View(colleges)
univ_calif_final <- colleges %>%
select(instnm, city, stabbr, zip, adm_rate, sat_avg, pcip26, costt4_a, c150_4_pooled, pftftug1_ef) %>%
separate(instnm, into = c("univ", "campus"), sep = "-") %>%
filter(univ == "University of California" & !campus %in% c("Hastings College of Law", "San Francisco"))
univ_calif_final
uni_cali_final %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
arrange(-low_adm_rate) #Berkeley has the lowest admission rates
univ_calif_final %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
arrange(-low_adm_rate) #Berkeley has the lowest admission rates
univ_calif_final %>%
separate(instnm, into = c("univ", "campus"), sep="-") %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
arrange(-low_adm_rate) #Berkeley has the lowest admission rates
univ_calif_final %>%
separate(instnm, into = c("univ", "campus"), sep="-") %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
arrange(-low_adm_rate) #Berkeley has the lowest admission rates
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
colleges <- read_csv("data/ca_college_data.csv")
colleges <- clean_names(colleges)
glimpse(colleges)
anyNA(colleges)
colleges %>%
count(city) %>%
arrange(desc(n))
#colleges %>%
#group_by(city) %>%
#summarise(instnm=n_distinct(instnm)) %>%
#arrange(-instnm)
colleges %>%
group_by(city) %>%
summarise(instnm=n_distinct(instnm)) %>% #summarize by institution name
top_n(10, instnm) %>% #top_n is a function
ggplot(aes(x = city, y = instnm))+
geom_col()+ #use this because we have x and y
coord_flip() #the city names are too long so, flip
#colleges %>%
#count(city) %>%
#top_n(10,n) %>%
#ggplot(aes(y=city, x=n))+
#geom_col()
colleges %>%
filter(costt4_a!="NA") %>%
group_by(city, instnm) %>%
summarise(avg_cost=mean(costt4_a), .groups= 'keep') %>%
arrange(-avg_cost)
#colleges %>%
#group_by(city, instnm) %>%
#summarise(avg_cost = mean(costt4_a, na.rm = T)) %>% #calculates the average annual cost of each institution
#arrange(desc(avg_cost))
colleges %>%
filter(city=="Claremont" | instnm == "University of California-Davis") %>%
ggplot(aes(x=instnm, y=costt4_a))+
geom_col()+
coord_flip()
#colleges %>%
#filter(costt4_a!="NA") %>%
#select(instnm, city, costt4_a) %>%
#top_n(10, instnm) %>%
#ggplot(aes(x=instnm, y=city))+
#geom_col()+
#coord_flip()
ggplot(data = colleges, mapping = aes(x = adm_rate, y = c150_4_pooled))+
geom_point()
colleges %>%
select(adm_rate, c150_4_pooled) %>%
filter(adm_rate!="NA" & c150_4_pooled!="NA") %>%
ggplot(aes(x=adm_rate, y=c150_4_pooled))+
geom_point()+
geom_smooth(method = lm, se=T) #This piece of code has the line
ggplot(data = colleges, mapping = aes(x = costt4_a, y = c150_4_pooled))+
geom_point()
colleges %>%
ggplot(aes(x=costt4_a, y= c150_4_pooled))+
geom_point(na.rm = T)+
geom_smooth(method = lm,se = T) #This code shows the line
univ_calif_final <- colleges %>%
select(instnm, city, stabbr, zip, adm_rate, sat_avg, pcip26, costt4_a, c150_4_pooled, pftftug1_ef) %>%
separate(instnm, into = c("univ", "campus"), sep = "-") %>%
filter(univ == "University of California" & !campus %in% c("Hastings College of Law", "San Francisco"))
univ_calif_final
univ_calif_final %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
arrange(-low_adm_rate) #Berkeley has the lowest admission rates
univ_calif_final %>%
separate(instnm, into = c("univ", "campus"), sep = "-") %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
arrange(-low_adm_rate) #Berkeley has the lowest admission rates
univ_calif_final %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
arrange(-low_adm_rate) #Berkeley has the lowest admission rates
univ_calif_final <- colleges %>%
select(instnm, city, stabbr, zip, adm_rate, sat_avg, pcip26, costt4_a, c150_4_pooled, pftftug1_ef) %>%
separate(instnm, into = c("univ", "campus"), sep = "-") %>%
filter(univ == "University of California" & !campus %in% c("Hastings College of Law", "San Francisco"))
univ_calif_final <- colleges %>%
select(instnm, city, stabbr, zip, adm_rate, sat_avg, pcip26, costt4_a, c150_4_pooled, pftftug1_ef) %>%
separate(instnm, into = c("univ", "campus"), sep = "-") %>%
filter(univ == "University of California" & !campus %in% c("Hastings College of Law", "San Francisco"))
univ_calif_final
uni_cali_final %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
ggplot(aes(x=campus, y=low_adm_rate))+
geom_col()
univ_calif_final %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
ggplot(aes(x=campus, y=low_adm_rate))+
geom_col()
univ_calif_final %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
ggplot(aes(y=campus, x=low_adm_rate))+
geom_col()
univ_calif_final %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
ggplot(aes(x=campus, y=low_adm_rate))+
geom_col()
uni_cali_final %>%
group_by(campus) %>%
summarise(highest_bio=max(pcip26)) %>%
ggplot(aes(x=campus, y=highest_bio))+
geom_col()
univ_calif_final %>%
group_by(campus) %>%
summarise(highest_bio=max(pcip26)) %>%
ggplot(aes(x=campus, y=highest_bio))+
geom_col()
univ_calif_final %>%
group_by(campus) %>%
summarise(highest_bio=max(pcip26)) %>%
arrange(-highest_bio)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
colleges <- read_csv("data/ca_college_data.csv")
colleges <- clean_names(colleges)
glimpse(colleges)
anyNA(colleges)
colleges %>%
count(city) %>%
arrange(desc(n))
#colleges %>%
#group_by(city) %>%
#summarise(instnm=n_distinct(instnm)) %>%
#arrange(-instnm)
colleges %>%
group_by(city) %>%
summarise(instnm=n_distinct(instnm)) %>% #summarize by institution name
top_n(10, instnm) %>% #top_n is a function
ggplot(aes(x = city, y = instnm))+
geom_col()+ #use this because we have x and y
coord_flip() #the city names are too long so, flip
#colleges %>%
#count(city) %>%
#top_n(10,n) %>%
#ggplot(aes(y=city, x=n))+
#geom_col()
colleges %>%
filter(costt4_a!="NA") %>%
group_by(city, instnm) %>%
summarise(avg_cost=mean(costt4_a), .groups= 'keep') %>%
arrange(-avg_cost)
#colleges %>%
#group_by(city, instnm) %>%
#summarise(avg_cost = mean(costt4_a, na.rm = T)) %>% #calculates the average annual cost of each institution
#arrange(desc(avg_cost))
colleges %>%
filter(city=="Claremont" | instnm == "University of California-Davis") %>%
ggplot(aes(x=instnm, y=costt4_a))+
geom_col()+
coord_flip()
#colleges %>%
#filter(costt4_a!="NA") %>%
#select(instnm, city, costt4_a) %>%
#top_n(10, instnm) %>%
#ggplot(aes(x=instnm, y=city))+
#geom_col()+
#coord_flip()
ggplot(data = colleges, mapping = aes(x = adm_rate, y = c150_4_pooled))+
geom_point()
colleges %>%
select(adm_rate, c150_4_pooled) %>%
filter(adm_rate!="NA" & c150_4_pooled!="NA") %>%
ggplot(aes(x=adm_rate, y=c150_4_pooled))+
geom_point()+
geom_smooth(method = lm, se=T) #This piece of code has the line
ggplot(data = colleges, mapping = aes(x = costt4_a, y = c150_4_pooled))+
geom_point()
colleges %>%
ggplot(aes(x=costt4_a, y= c150_4_pooled))+
geom_point(na.rm = T)+
geom_smooth(method = lm,se = T) #This code shows the line
univ_calif_final <- colleges %>%
select(instnm, city, stabbr, zip, adm_rate, sat_avg, pcip26, costt4_a, c150_4_pooled, pftftug1_ef) %>%
separate(instnm, into = c("univ", "campus"), sep = "-") %>%
filter(univ == "University of California" & !campus %in% c("Hastings College of Law", "San Francisco"))
univ_calif_final
univ_calif_final %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
arrange(-low_adm_rate)
univ_calif_final %>%
group_by(campus) %>%
summarise(low_adm_rate=min(adm_rate)) %>%
ggplot(aes(x=campus, y=low_adm_rate))+
geom_col()
univ_calif_final %>%
group_by(campus) %>%
summarise(highest_bio=max(pcip26)) %>%
arrange(-highest_bio)
univ_calif_final %>%
group_by(campus) %>%
summarise(highest_bio=max(pcip26)) %>%
ggplot(aes(x=campus, y=highest_bio))+
geom_col()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(naniar)
deserts <- read_csv("data/surveys_complete.csv") %>% clean_names()
glimpse(deserts)
miss_var_summary(deserts)
summary(deserts)
deserts
#the data is tidy!
# each variable has its own column
# each observation has its own row
# each value has its own cell
deserts %>%
summarize(n_genera = n_distinct(genus), #amount of genera in the dataset
n_species = n_distinct(species), #amount of distinct species in dataset
n_total_observations = n()) #total amount of observations
deserts %>%
count(species) %>% #amount of observations for each species
arrange(n)
deserts %>%
count(species) %>%
arrange(desc(n)) #sort most to least observations
taxa_prop <- deserts %>%
tabyl(taxa)
taxa_prop
taxa_prop %>%
ggplot(aes(x = taxa, y = n, fill = taxa)) +
geom_col() +
scale_y_log10() +
labs(title = "Taxa Represented in Study",
x = "Taxa",
y = "Number of Observations") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.75))
taxa_proportions %>%
ggplot(aes(x = taxa, y = percent, fill = taxa)) + #creating the plot
geom_col() + #creating a bar plot
labs(title = "Taxa Represented in Study",
x = "Taxa",
y = "Proportion") + #adding labels
theme(plot.title = element_text(size = rel(1.3), hjust = 0.5))
taxa_prop %>%
ggplot(aes(x = taxa, y = percent, fill = taxa)) + #creating the plot
geom_col() + #creating a bar plot
labs(title = "Taxa Represented in Study",
x = "Taxa",
y = "Proportion") + #adding labels
theme(plot.title = element_text(size = rel(1.3), hjust = 0.5))
deserts %>%
ggplot(aes(x = taxa, fill = plot_type))+ #this is the modified line to show the prop. of indiv. sampled by 'plot_type'
geom_bar()+
scale_y_log10()
?scale_y_log10()
deserts %>%
ggplot(aes(x = taxa, fill = plot_type))+ #this is the modified line to show the prop. of indiv. sampled by 'plot_type'
geom_bar()+
scale_y_log10()+ #fixes viewing for continuous data
labs(title = "Taxa Represented in Study",
x = "Taxa",
y = "Number of Observations",
fill = "Type of Plot")
deserts %>%
ggplot(aes(x = taxa, fill = plot_type))+ #this is the modified line to show the prop. of indiv. sampled by 'plot_type'
geom_bar()+
scale_y_log10()+ #fixes viewing for continuous data
labs(title = "Taxa Represented in Study",
x = "Taxa",
y = "Number of Observations",
fill = "Type of Plot") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
deserts %>%
ggplot(aes(x = taxa, fill = plot_type))+ #this is the modified line to show the prop. of indiv. sampled by 'plot_type'
geom_bar()+
scale_y_log10()+ #fixes viewing for continuous data
labs(title = "Taxa Represented in Study",
x = "Taxa",
y = "Number of Observations",
fill = "Type of Plot") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.75))
deserts %>%
ggplot(aes(x = taxa, fill = plot_type))+ #this is the modified line to show the prop. of indiv. sampled by 'plot_type'
geom_bar()+
scale_y_log10()+ #fixes viewing for continuous data
labs(title = "Taxa Represented in Study",
x = "Taxa",
y = "Number of Observations",
fill = "Type of Plot") +
theme(plot.title = element_text(size = rel(1.5), hjust = 0.75))
deserts %>%
filter(weight != "NA") %>%
unite(species_name, "genus", "species", sep = " ") %>%
ggplot(aes(x = species_name, y = weight))
deserts %>%
filter(weight != "NA") %>%
unite(species_name, "genus", "species", sep = " ") %>%
ggplot(aes(x = species_name, y = weight))+
geom_boxplot()
deserts %>%
filter(weight != "NA") %>%
unite(species_name, "genus", "species", sep = " ") %>%
ggplot(aes(x = species_name, y = weight))+
geom_boxplot()+
coord_flip()
deserts %>%
filter(weight != "NA") %>%
unite(species_name, "genus", "species", sep = " ") %>%
ggplot(aes(x = species_name, y = weight))+
geom_boxplot()+
coord_flip()+
labs(title = "Weight by Species",
x = "Weight",
y = "Species Name")+
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))
deserts %>%
filter(weight != "NA") %>%
unite(species_name, "genus", "species", sep = " ") %>%
ggplot(aes(x = species_name, y = weight))+
geom_boxplot()+
coord_flip()+
labs(title = "Weight by Species",
x = "Weight",
y = "Species Name")+
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5))+
geom_point(aes(color = weight), size = 0.5)
deserts %>%
filter(species == "merriami") %>%  #filter by most freq animal
group_by(year) %>%
summarize(n_observations = n())
deserts %>%
count(year) %>%
ggplot(aes(x = year, y = n)) +
geom_point() +
labs(title = "Number of Observations by Year",
x = "Year",
y = "Number of Observations") +
theme(plot.title = element_text(size = rel(1.3), hjust = 0.5)) +
geom_smooth(method = lm, se = T) #adding line of best fit and it shows standard error
deserts %>%
ggplot(aes(x = weight, y = hindfoot_length)) + #creating the plot
labs(title = "Hindfoot Length vs Weight",
x = "Weight",
y = "Hindfoot Length") + #adding labels
theme(plot.title = element_text(size = rel(1.3), hjust = 0.5)) + #moving and resizing the lables
geom_smooth(method = lm, se = T)
deserts %>%
ggplot(aes(x = weight, y = hindfoot_length)) + #creating the plot
geom_jitter() + #reducing overplotting
labs(title = "Hindfoot Length vs Weight",
x = "Weight",
y = "Hindfoot Length") + #adding labels
theme(plot.title = element_text(size = rel(1.3), hjust = 0.5)) + #moving and resizing the lables
geom_smooth(method = lm, se = T)
deserts %>%
ggplot(aes(x = weight, y = hindfoot_length)) +
geom_jitter() + #reducing overplotting
labs(title = "Hindfoot Length vs Weight",
x = "Weight",
y = "Hindfoot Length") + #adding labels
theme(plot.title = element_text(size = rel(1.5), hjust = 0.5)) +
geom_smooth(method = lm, se = T)
deserts %>%
group_by(species) %>%
summarize(avg_weight = mean(weight, na.rm = T)) %>%
arrange(desc(avg_weight)) %>%
head(2, species) #displays the two species with highest average weight
#New column with ratio of 'weight' to 'hind_foot'
high_weight_desert <- deserts %>%
filter(species == "albigula" | species == "spectabilis") %>%
mutate(w_hindfoot_length_ratio = weight / hindfoot_length)
high_weight_desert
#New column with ratio of 'weight' to 'hind_foot'
high_weight_desert <- deserts %>%
filter(species == "albigula" | species == "spectabilis") %>%
mutate(w_hindfoot_length_ratio = weight / hindfoot_length)
deserts
#New column with ratio of 'weight' to 'hind_foot'
high_weight_desert <- deserts %>%
filter(species == "albigula" | species == "spectabilis") %>%
mutate(w_hindfoot_length_ratio = weight / hindfoot_length)
high_weight_desert
high_weight_desert %>%
filter(sex != "NA") %>%
ggplot(aes(x = species, y = w_hindfoot_length_ratio, fill = sex))+
geom_boxplot(alpha = 0.5)
