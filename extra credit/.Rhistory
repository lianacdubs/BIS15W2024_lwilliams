global_sharks %>%
filter(!is.na(sex) & sex %in% c('M', 'F'))%>%
ggplot(aes(x=sex))+
geom_bar()+
coord_flip()+
labs(title="Age of Attacked Individuals",
x="Attacks",
y="Age")
View(global_sharks_new)
global_sharks %>%
filter(!is.na(sex) & sex %in% c('M', 'F'))%>%
ggplot(aes(x=sex, y=age))+
geom_col()+
coord_flip()+
labs(title="Age of Attacked Individuals",
x="Attacks",
y="Age")
global_sharks %>%
filter(!is.na(sex) & sex %in% c('M', 'F'))%>%
ggplot(aes(x=sex, y=age))+
geom_col()+
labs(title="Age of Attacked Individuals",
x="Attacks",
y="Age")
# Clean the sex column to include only 'M' or 'F'
df_clean <- df %>%
filter(!is.na(sex) & sex %in% c('M', 'F'))
# Clean sex column to include only 'M' or 'F'
global_sharks_cleaned <- global_sharks %>%
filter(!is.na(sex) & sex %in% c('M', 'F'))
# Clean the age column, convert to numeric, and handle NAs
global_sharks_cleaned <- global_sharks %>%
mutate(age = gsub("[^0-9]", "", age), # Remove non-numeric characters
age = as.numeric(age)) # Convert to numeric
# Plot the range of age for individuals that are attacked
age_plot <- ggplot(df_clean, aes(x = sex, y = age)) +
geom_boxplot() +
labs(title = "Age of Attacked Individuals",
x = "Sex",
y = "Age")
# Clean sex column to include only 'M' or 'F'
global_sharks_cleaned <- global_sharks %>%
filter(!is.na(sex) & sex %in% c('M', 'F'))
# Clean the age column, convert to numeric, and handle NAs
global_sharks_cleaned <- global_sharks %>%
mutate(age = gsub("[^0-9]", "", age), # Remove non-numeric characters
age = as.numeric(age)) # Convert to numeric
# Plot the range of age for individuals that are attacked
ggplot(global_sharks_cleaned, aes(x = sex, y = age)) +
geom_boxplot() +
labs(title = "Age of Attacked Individuals",
x = "Sex",
y = "Age")
# Clean sex column to include only 'M' or 'F'
global_sharks_cleaned <- global_sharks %>%
filter(!is.na(sex) & sex %in% c('M', 'F'))
# Clean the age column, convert to numeric, and handle NAs
global_sharks_cleaned <- global_sharks %>%
mutate(age = gsub("[^0-9]", "", age), # Remove non-numeric characters
age = as.numeric(age)) # Convert to numeric
# Plot the range of age for individuals that are attacked
ggplot(global_sharks_cleaned, aes(x = sex, y = age)) +
geom_bar() +
labs(title = "Age of Attacked Individuals",
x = "Sex",
y = "Age")
# Clean sex column to include only 'M' or 'F'
global_sharks_cleaned <- global_sharks %>%
filter(!is.na(sex) & sex %in% c('M', 'F'))
# Clean the age column, convert to numeric, and handle NAs
global_sharks_cleaned <- global_sharks %>%
mutate(age = gsub("[^0-9]", "", age), # Remove non-numeric characters
age = as.numeric(age)) # Convert to numeric
# Plot the range of age for individuals that are attacked
ggplot(global_sharks_cleaned, aes(x = sex, y = age)) +
geom_col() +
labs(title = "Age of Attacked Individuals",
x = "Sex",
y = "Age")
# Clean sex column to include only 'M' or 'F'
global_sharks_cleaned <- global_sharks %>%
filter(!is.na(sex) & sex %in% c('M', 'F'))
# Plot
ggplot(global_sharks_cleaned, aes(x = sex, y = age, fill=sex)) +
geom_boxplot() +
labs(title = "Age of Attacked Individuals",
x = "Sex",
y = "Age",
fill = "Sex")
shark_attack <- global_sharks %>%
filter(country == "USA", year >= 1950)
state_incidents <- shark_attack %>%
group_by(area) %>%
summarise(incidents = n()) %>%
arrange(desc(incidents)) %>%
top_n(5, incidents)
ggplot(state_incidents, aes(x = reorder(area, incidents), y = incidents)) +
geom_bar(stat = "identity") +
labs(x = "State", y = "Number of Incidents", title = "Top 5 States by Shark Attacks Since 1950") +
coord_flip()
great_white <- global_sharks %>%
filter(str_detect(string = species, pattern = "Great White Shark", na.rm=T))
great_white <- global_sharks %>%
filter(str_detect(string = species, pattern = "Great White Shark", ignore_case=T))
library("tidyverse")
library("janitor")
library("naniar")
global_sharks <- read_csv("data/global-shark-attack.csv") %>% clean_names()
glimpse(global_sharks)
global_sharks %>%
naniar::miss_var_summary()
global_sharks %>%
count(country) %>%
arrange(desc(n))
global_sharks %>%
count(country) %>%
top_n(10, n) %>%
ggplot(aes(x=reorder(country,n), y=n))+
geom_col(fill = "violetred", alpha=0.8)+
coord_flip()+
labs(title="Shark Incidents by Country (1950-2022)",
x=NULL,
y="n") +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(size = 14, face="bold"))+
geom_text(aes(label = n), vjust = -0.2, size = 3, color = "black")
global_sharks_new <- global_sharks %>%
separate(date, into=c("year", "month", "day"), sep="-")
global_sharks_new %>%
group_by(month) %>%
summarise(total=n(), .groups='keep') %>%
ggplot(aes(x=as_factor(month), y=total))+
geom_col(fill = "#0099f9", alpha=0.8)+
labs(title="Shark Incidents by Month",
x="Month",
y="n")+
theme(plot.title = element_text(size = 14, face="bold"))
global_sharks_new %>%
count(activity) %>%
arrange(desc(n))
global_sharks %>%
filter(activity!="NA") %>%
group_by(activity) %>%
summarise(incident_count = n()) %>%
top_n(5, incident_count) %>%
ggplot(aes(x=reorder(activity, incident_count),  y=incident_count))+
geom_col()+
coord_flip() +
labs(x = "Activity", y = "Number of Incidents", title = "Top 5 Riskiest Activities")
global_sharks %>%
filter(sex %in% c("M", "F")) %>%
group_by(sex) %>%
summarise(fatalities = sum(fatal_y_n == "Y", na.rm = T)) %>%
ggplot(aes(x=sex, y=fatalities, fill=sex))+
geom_col(alpha=0.8)+
labs(title="Fatalities from Sharks by Sex",
x="Sex",
y="Fatality")
# Clean sex column to include only 'M' or 'F'
global_sharks_cleaned <- global_sharks %>%
filter(!is.na(sex) & sex %in% c('M', 'F'))
# Plot
ggplot(global_sharks_cleaned, aes(x = sex, y = age, fill=sex)) +
geom_boxplot() +
labs(title = "Age of Attacked Individuals",
x = "Sex",
y = "Age",
fill = "Sex")
shark_attack <- global_sharks %>%
filter(country == "USA", year >= 1950)
state_incidents <- shark_attack %>%
group_by(area) %>%
summarise(incidents = n()) %>%
arrange(desc(incidents)) %>%
top_n(5, incidents)
ggplot(state_incidents, aes(x = reorder(area, incidents), y = incidents)) +
geom_bar(stat = "identity") +
labs(x = "State", y = "Number of Incidents", title = "Top 5 States by Shark Attacks Since 1950") +
coord_flip()
great_white <- global_sharks %>%
filter(str_detect(string = species, pattern = "Great White Shark", ignore_case=T))
library("tidyverse")
library("janitor")
library("naniar")
library("stringr")
great_white <- global_sharks %>%
filter(str_detect(string = species, pattern = "Great White Shark", ignore_case=T))
# Filter data for Great White Shark attacks
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark", ignore_case = TRUE)))
# Check if we have the correct number of observations
print(nrow(great_white_attacks))  # Should print 2
# Find which country has the highest number of Great White Shark attacks
country_count <- great_white_attacks %>%
count(country) %>%
arrange(desc(n))
# Display the country with the highest number of attacks
print(country_count[1, ])
# Filter data for Great White Shark attacks
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Check if we have the correct number of observations
print(nrow(great_white_attacks)) # Should print 494
# Find which country has the highest number of Great White Shark attacks
country_count <- great_white_attacks %>%
count(country) %>%
arrange(desc(n))
# Display the country with the highest number of attacks
print(country_count[1, ])
# Filter data for Great White Shark attacks
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Check if we have the correct number of observations
print(nrow(great_white_attacks)) # Should print 494
# Find which country has the highest number of Great White Shark attacks
#country_count <- great_white_attacks %>
#count(country) %>%
#arrange(desc(n))
# Display the country with the highest number of attacks
#print(country_count[1, ])
# Filter data for Great White Shark attacks
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Check if we have the correct number of observations
print(nrow(great_white_attacks)) # Should print 494
# Find which country has the highest number of Great White Shark attacks
#country_count <- great_white_attacks %>
#count(country) %>%
#arrange(desc(n))
# Display the country with the highest number of attacks
#print(country_count[1, ])
library(dplyr)
library(stringr)
# Filter data for Great White Shark attacks
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Check if we have the correct number of observations
print(nrow(great_white_attacks)) # Should print 494
# Find which country has the highest number of Great White Shark attacks
country_count <- great_white_attacks %>%
count(country) %>%
arrange(desc(n))
# Display the country with the highest number of attacks
print(country_count[1, ])
# Filter data for Great White Shark attacks
great_white_attacks <- df %>%
filter(str_detect(string = species, pattern = "Great White Shark|White shark", ignore_case = TRUE))
# Filter data for Great White Shark attacks
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = "Great White Shark|White shark", ignore_case = TRUE))
# Filter data for Great White Shark attacks
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = "Great White Shark|White shark", ignore_case = TRUE))
# Filter data for Great White Shark attacks
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = "Great White Shark|White shark", ignore_case = TRUE))
# Filter data for Great White Shark attacks
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = "Great White Shark|White shark", ignore_case = TRUE))
# Filter data for Great White Shark attacks
great_white_attacks <- df %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Filter data for Great White Shark attacks
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Check if we have the correct number of observations
print(nrow(great_white_attacks)) # Should print 494
# Find which country has the highest number of Great White Shark attacks
country_count <- great_white_attacks %>%
count(country) %>%
arrange(desc(n))
# Display the country with the highest number of attacks
print(country_count[1, ])
# Filter data for Great White Shark attacks
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Check correct number of observations
print(nrow(great_white_attacks)) # Should print 494
# Find which country has the highest number of Great White Shark attacks
country_count <- great_white_attacks %>%
count(country) %>%
arrange(desc(n))
# Display the country with the highest number of attacks
print(country_count[1, ])
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Filter
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = "Great White Shark|White shark", ignore_case = TRUE))
# Filter data for Great White Shark attacks
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Check correct number of observations
print(nrow(great_white_attacks)) # Should print 494
# Find which country has the highest number of Great White Shark attacks
country_count <- great_white_attacks %>%
count(country) %>%
arrange(desc(n))
# Display the country with the highest number of attacks
print(country_count[1, ])
# Filter
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Get the top 5 countries
top_countries <- great_white_attacks %>%
count(country) %>%
arrange(desc(n)) %>%
slice(1:5) %>%
pull(country)
# Filter to include top 5 countries
top_country_attacks <- great_white_attacks %>%
filter(country %in% top_countries)
# Create a plot comparing fatal and non-fatal attacks for the top 5 countries
ggplot(top_country_attacks, aes(x = country, fill = fatal_y_n)) +
geom_bar(position = "dodge") +
facet_wrap(~ country) +
labs(title = "Fatal and Non-Fatal Great White Shark Attacks in Top 5 Countries",
x = "Country",
y = "Number of Attacks",
fill = "Fatal (Y/N)") +
theme_minimal()
# Filter
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Get the top 5 countries
top_countries <- great_white_attacks %>%
count(country) %>%
arrange(desc(n)) %>%
slice(1:5) %>%
pull(country)
# Filter to include top 5 countries
top_country_attacks <- great_white_attacks %>%
filter(country %in% top_countries)
# Create a plot comparing fatal and non-fatal attacks for the top 5 countries
ggplot(top_country_attacks, aes(x = country, fill = fatal_y_n)) +
geom_bar(position = "dodge") +
facet_wrap(~ country) +
labs(title = "Fatal and Non-Fatal Great White Shark Attacks in Top 5 Countries",
x = "Country",
y = "Number of Attacks",
fill = "Fatal (Y/N)") #+
# theme_minimal()
# Filter
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Get the top 5 countries
top_countries <- great_white_attacks %>%
count(country) %>%
arrange(desc(n)) %>%
slice(1:5) %>%
pull(country)
# Filter to include top 5 countries
top_country_attacks <- great_white_attacks %>%
filter(country %in% top_countries)
# Create a plot comparing fatal and non-fatal attacks for the top 5 countries
ggplot(top_country_attacks, aes(x = country, fill = fatal_y_n)) +
geom_bar(position = "dodge") +
facet_wrap(~ country) +
labs(title = "Fatal and Non-Fatal Great White Shark Attacks in Top 5 Countries",
x = "Country",
y = "Number of Attacks",
fill = "Fatal (Y/N)") +
theme(strip.text = element_text(size=10),
axis.text.x = element_text(size=8, angle = 60, hjust = 1))
# Filter
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Get the top 5 countries
top_countries <- great_white_attacks %>%
count(country) %>%
arrange(desc(n)) %>%
slice(1:5) %>%
pull(country)
# Filter to include top 5 countries
top_country_attacks <- great_white_attacks %>%
filter(country %in% top_countries)
# Create a plot comparing fatal and non-fatal attacks for the top 5 countries
ggplot(top_country_attacks, aes(x = country, fill = fatal_y_n)) +
geom_bar(position = "dodge") +
facet_wrap(~ country) +
labs(title = "Fatal and Non-Fatal Great White Shark Attacks in Top 5 Countries",
x = NULL,
y = "Number of Attacks",
fill = "Fatal (Y/N)") +
theme(strip.text = element_text(size=10),
axis.text.x = element_text(size=8, angle = 60, hjust = 1))
# Filter
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Get the top 5 countries
top_countries <- great_white_attacks %>%
count(country) %>%
arrange(desc(n)) %>%
slice(1:5) %>%
pull(country)
# Filter to include top 5 countries
top_country_attacks <- great_white_attacks %>%
filter(country %in% top_countries)
# Create a plot comparing fatal and non-fatal attacks for the top 5 countries
ggplot(top_country_attacks, aes(x = NULL, fill = fatal_y_n)) +
geom_bar(position = "dodge") +
facet_wrap(~ country) +
labs(title = "Fatal and Non-Fatal Great White Shark Attacks in Top 5 Countries",
x = NULL,
y = "Number of Attacks",
fill = "Fatal (Y/N)") +
theme(strip.text = element_text(size=10),
axis.text.x = element_text(size=8, angle = 60, hjust = 1))
# Filter
great_white_attacks <- global_sharks %>%
filter(str_detect(string = species, pattern = regex("Great White Shark|White shark", ignore_case = TRUE)))
# Get the top 5 countries
top_countries <- great_white_attacks %>%
count(country) %>%
arrange(desc(n)) %>%
slice(1:5) %>%
pull(country)
# Filter to include top 5 countries
top_country_attacks <- great_white_attacks %>%
filter(country %in% top_countries)
# Create a plot comparing fatal and non-fatal attacks for the top 5 countries
ggplot(top_country_attacks, aes(x = country, fill = fatal_y_n)) +
geom_bar(position = "dodge") +
facet_wrap(~ country) +
labs(title = "Fatal and Non-Fatal Great White Shark Attacks in Top 5 Countries",
x = NULL,
y = "Number of Attacks",
fill = "Fatal (Y/N)") +
theme(strip.text = element_text(size=10),
axis.text.x = element_text(size=8, angle = 60, hjust = 1))
# Clean sex column to include only 'M' or 'F'
global_sharks_cleaned <- global_sharks %>%
filter(!is.na(sex) & sex %in% c('M', 'F'))
# Plot
ggplot(global_sharks_cleaned, aes(x = sex, y = age)) +
geom_boxplot(fill = "steelblue", color="violetred") +
labs(title = "Age of Attacked Individuals",
x = "Sex",
y = "Age",
fill = "Sex")
# Clean sex column to include only 'M' or 'F'
global_sharks_cleaned <- global_sharks %>%
filter(sex %in% c('M', 'F'))
#age to numeric
global_sharks_cleaned <- as.numeric(as.character(global_sharks_cleaned$age))
# Plot
ggplot(global_sharks_cleaned, aes(x = sex, y = age)) +
geom_boxplot(fill = "steelblue", color="black") +
labs(title = "Age of Attacked Individuals by Sex",
x = "Sex",
y = "Age")+
theme_classic()
# Clean sex column to include only 'M' or 'F'
global_sharks_cleaned <- global_sharks %>%
filter(sex %in% c('M', 'F'))
#age to numeric
global_sharks_cleaned <- as.numeric(as.character(global_sharks_cleaned$age))
# Plot
ggplot(global_sharks_cleaned, aes(x = sex, y = age)) +
geom_boxplot(fill = "steelblue", color="black") +
labs(title = "Age of Attacked Individuals by Sex",
x = "Sex",
y = "Age")
# Clean sex column to include only 'M' or 'F'
global_sharks_cleaned <- global_sharks %>%
filter(sex %in% c('M', 'F'))
#age to numeric
global_sharks_cleaned <- as.numeric(as.character(global_sharks_cleaned$age))
#remove rows with NA in age after converting
global_sharks_cleaned %>%
filter(!is.na(age))
# Clean sex column to include only 'M' or 'F'
global_sharks_cleaned <- global_sharks %>%
filter(sex %in% c('M', 'F'))
#age to numeric
global_sharks_cleaned <- as.numeric(as.character(global_sharks_cleaned$age))
#remove rows with NA in age after converting
global_sharks_cleaned <- global_sharks_cleaned %>%
filter(!is.na(age))
# Clean sex column to include only 'M' or 'F'
df_cleaned <- df %>%
filter(sex %in% c('M', 'F'))
# Clean sex column to include only 'M' or 'F'
sharks_cleaned <- global_sharks %>%
filter(sex %in% c('M', 'F'))
# Convert age to a numeric variable, handling non-numeric values and NAs
sharks_cleaned$age <- as.numeric(as.character(sharks_cleaned$age))
# Remove rows with NA in age after conversion
sharks_cleaned <- sharks_cleaned %>%
filter(!is.na(age))
# Plot
ggplot(sharks_cleaned, aes(x = sex, y = age)) +
geom_boxplot(fill = "steelblue", color = "violetred") +
labs(title = "Age of Attacked Individuals by Sex",
x = "Sex",
y = "Age") +
theme_minimal()
# Clean sex column to include only 'M' or 'F'
sharks_cleaned <- global_sharks %>%
filter(sex %in% c('M', 'F'))
# Convert age to a numeric variable, handling non-numeric values and NAs
sharks_cleaned$age <- as.numeric(as.character(sharks_cleaned$age))
# Remove rows with NA in age after conversion
sharks_cleaned <- sharks_cleaned %>%
filter(!is.na(age))
# Plot
ggplot(sharks_cleaned, aes(x = sex, y = age)) +
geom_boxplot(fill = "steelblue", color = "black") +
labs(title = "Age of Attacked Individuals by Sex",
x = "Sex",
y = "Age") +
theme_minimal()
