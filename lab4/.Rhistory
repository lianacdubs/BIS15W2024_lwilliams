install.packages("palmerpenguins")
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("palmerpenguins")
library("tidyverse")
library("palmerpenguins")
dim(penguins)
names(penguins)
str(fish)
str(penguins)
mean(penguins$body_mass_g)
penguins <- penguins #Look at the data spreadsheet
table(penguins$island) #variable of interest is island
summary(penguins$island)
mean(penguins$body_mass_g, na.rm=T)
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
glimpse(fish)
summary(fish)
names(fish)
select(fish, "lakeid", "scalelength")
names(fish)
names(fish)
select(fish, "fish_id", "length")
fish_subset <- select(fish, "length", "fish_id")
select(fish, fish_id:length)
select(fish, -"fish_id", -"annnumber", -"length", -"radii_length_mm")
select(fish, contains("length"))
#look into the fish data and remove everything that has to do with length
select(fish, matches("a.+er")) #handy bit of code for the project. Look at the variables of interest.
glimpse(fish)
select_if(fish, is.numeric)
library("mammal_lifehistories_v2.csv")
mammal_lifehistories_v2 <- read_csv("mammal_lifehistories_v2.csv")
mammal_lifehistories_v2 <- read_csv("data/mammal_lifehistories_v2.csv")
library("mammal_lifehistories_v2")
mammals <- read_csv("data/mammal_lifehistories_v2.csv")
mammals <- read_csv("data/mammal_lifehistories_v2.csv")
glimpse(mammals)
is.na(mammals)
View(mammal_lifehistories_v2)
mean(mammals$`max. life`)
names(mammals)
mammals <- read_csv("data/mammal_lifehistories_v2.csv")
#The data folder inside of lab 4 has the .csv
glimpse(mammals)
names(mammals)
mammals <- data.frame(order, family, genus=Genus, species, mass, gestation, newborn, weaning, wean mass, afr=AFR, max. life, litter size, litters/year)
rename(mammals, genus="Genus")
anyNA(mammals)
summary(mammals)
mammals_new = rename(mammals, genus="Genus", wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
#new name = old name
#copy amd paste is helpful
mass <- select(mammals_new, "genus", "species", "mass")
View(mass)
select(mammals_new, -"order", -"family")
select(mass, contains("mass"))
select(mammals_new, contains("mass"))
select_if(mammals_new, ~is.character(.))
toupper(mammals_new)
tolower(mammals_new)
select(mammals_new, -"order", -"family")
select_if(mammals_new, ~is.character(.))
library(janitor)
library(janitor)
names(mammals)
clean_names(mammals)
mammals <- select_all (mammals, tolower)
library("tidyverse")
fish <- read_csv("data/Gaeta_etal_CLC_data.csv")
mammals <- read_csv("data/mammal_lifehistories_v2.csv")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
mammals <- read_csv("data/mammal_lifehistories_v2.csv")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
filter(fish, lakeid == "AL")
filter(fish, length >= 350)
not_AL <- filter(fish, lakeid != "AL") #! means not
filter(fish, length %in% c(167, 175))
#within the variable length all those with 167 or 175
filter(fish, between(scalelength, 2.5, 2.55))
filter(fish, near(radii_length_mm, 2, tol = 0.2))
#look for radii length near two but within 0.2 of eachother
#tol = tolerance
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages(c("cli", "cpp11", "DBI", "digest", "fansi", "ggplot2", "glue", "gtable", "labeling", "lifecycle", "plyr", "prettyunits", "progress", "ps", "Rcpp", "readr", "reprex", "roxygen2", "scales", "timechange", "utf8", "uuid", "vroom", "withr"))
install.packages("palmerpenguins")
library("tidyverse")
#Note: Once a package is installed using install function don't try to do it again. Put a hashtag in front of it.
library("tidyverse")
#Note: Once a package is installed using install function don't try to do it again. Put a hashtag in front of it.
fish <- readr::read_csv("data/Gaeta_etal_CLC_data.csv")
glimpse(fish)
summary(fish)
names(fish) #shows six variables of interest
select(fish, "lakeid", "scalelength") #(name of data frame which is an object, variable1 of interst, variable2 of interest)
names(fish)
select(fish, "fish_id", "length")
#if you reverse order of variables it changes then order in the table
fish_subset <- select(fish, "length", "fish_id") #creates a new object with these two variables
select(fish, fish_id:length)
select(fish, -"fish_id", -"annnumber", -"length", -"radii_length_mm")
names(fish)
select(fish, contains("length"))
#look into the fish data and remove everything that has to do with length
select(fish, starts_with("radii"))
#pull out all the variables that start with the name radii
names(fish)
select(fish, ends_with("id"))
#ends with
select(fish, contains("fish"))
#contains is a permutation of select command
select(fish, matches("a.+er")) #handy bit of code for the project. Look at the variables of interest.
glimpse(fish)
select_if(fish, is.numeric)
select_if(fish, ~!is.numeric(.))
#look into fish and pull things that are not numerics.
#~ is all cells ! is DONT pull out the ones that are not numeric
# ! = not
mammals <- read_csv("data/mammal_lifehistories_v2.csv")
#The data folder inside of lab 4 has the .csv
glimpse(mammals)
anyNA(mammals)
summary(mammals)
names(mammals)
mammals_new = rename(mammals, genus="Genus", wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
#new name = old name
#copy amd paste is helpful
mass <- select(mammals_new, "genus", "species", "mass")
select(mammals_new, -"order", -"family")
#pull all the variables out that are not these two. if you wanted only these two then, use the -
select(mammals_new, contains("mass"))
select_if(mammals_new, ~is.character(.))
#select_if(mammals_new, is.character) which also works
mammals <- select_all (mammals, tolower)
library(janitor)
names(mammals)
clean_names(mammals) #running janitor and this function fixes all the name
#select_all(mammals, ~str_replace(., " ", "_"))
library("tidyverse")
fish <- read_csv("data/Gaeta_etal_CLC_data.csv")
mammals <- read_csv("data/mammal_lifehistories_v2.csv")
mammals <- rename(mammals, genus=Genus, wean_mass="wean mass", max_life="max. life", litter_size="litter size", litters_per_year="litters/year")
filter(fish, lakeid == "AL") #pull out 383 observations
filter(fish, length >= 350) #note: 350 is a number so there are no quotes
not_AL <- filter(fish, lakeid != "AL") #! means not
filter(fish, length %in% c(167, 175))
#within the variable length all those with length 167 or 175
#multiple values in teh same variable %n%
filter(fish, between(scalelength, 2.5, 2.55))
filter(fish, near(radii_length_mm, 2, tol = 0.2))
#look for radii length near two but within 0.2 of eachother
#tol = tolerance
filter(fish, lakeid == "AL" & length > 350)
filter(fish, lakeid == "AL" | length > 350)
filter(fish, length > 400, (scalelength > 11 | radii_length_mm > 8))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
library(tidyverse)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
homerange
#readr is explicit of the package we are use
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
#readr is explicit of the package we are use
View(homerange)
dim(homerange)
names(homerange)
str(homerange)
#This shows the classes for each variable
summary(homerange)
#This shows a statistical summary
levels(hot_springs$scientist) #tells how many different factors you have in a variable.
#put the data in a new object in this case hot_springs; the thing you want to open in quotes
hot_springs <- read_csv("hsprings_data.csv")
str(hot_springs)
class(hot_springs$scientist) #double check scientist is a character class
hot_springs$scientist <- as.factor(hot_springs$scientist)
#replace scientist in the hotsprings dataframe but make it into a factor
hot_springs$scientist <- as.factor(hot_springs$scientist)
#replace scientist in the hotsprings dataframe but make it into a factor
levels(hot_springs$scientist) #tells how many different factors you have in a variable.
homerange$taxon <- as.factor(homerange$taxon)
#replace scientist in the hotsprings dataframe but make it into a factor
homerange$order <- as.factor(homerange$order)
levels(homerange$order)
#tells how many different factors you have in a variable.
homerange$taxon <- as.factor(homerange$taxon)
levels(homerange$taxon)
#replace taxon in the homerange dataframe but make it into a factor. Then display the levels
homerange$order <- as.factor(homerange$order)
levels(homerange$order)
taxa <- select(homerange, "taxon", "common.name", "class", "order", "family", "genus", "species")
taxa
table(homerange$taxon)
table(homerange$trophic.guild)
library(tidyverse)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
#readr is explicit of the package we are use
dim(homerange)
#This code shows the dimensions of the homerange data
names(homerange)
#This codes shows the column names
str(homerange)
#This shows the classes for each variable
summary(homerange)
#This shows a statistical summary
homerange$taxon <- as.factor(homerange$taxon)
levels(homerange$taxon)
#replace taxon in the homerange dataframe but make it into a factor. Then display the levels
homerange$order <- as.factor(homerange$order)
levels(homerange$order)
taxa <- select(homerange, "taxon", "common.name", "class", "order", "family", "genus", "species")
taxa
table(homerange$taxon)
table(homerange$trophic.guild)
