x <- 42
x
treatment <- 36
control <- 38
y <- 30
my_experiment <- sum(treatment, control)
my_experiment
treatment+control
else <- 12
venom_GT <- 270
chiron <- 261
veyron <- 268
(sum(venom_GT, chiron, veyron))/3
mean(venom_GT, chiron, veyron)
venom_GT <- 270
chiron <- 261
veyron <- 268
(270+261+268)/3
cars <- c(venom_GT, chiron, veyron)
cars <- c(venom_GT, chiron, veyron)
mean(cars)
class(my_numeric)
my_numeric <- 42
my_integer <- 2L #adding an L automatically denotes an integer
my_character <- "universe"
my_logical <- FALSE
my_complex <- 2+4i
class(my_numeric)
is.integer(my_numeric) #is my_numeric an integer?
my_integer <-
as.integer(my_numeric) #create a new object specified as an integer
my_integer <-
as.integer(my_numeric) #create a new object specified as an integer
is.integer(my_integer) #is my_numeric an integer?
my_missing <- NA
is.na(my_missing)
anyNA(my_missing)
new_vector <- c(7, 6.2, 5, 9, NA, 4, 9.8, 7, 3, 2)
new_vector <- c(7, 6.2, 5, 9, NA, 4, 9.8, 7, 3, 2)
mean(new_vector)
mean(new_vector, na.rm=T) #na.rm removes the NA values in the vector
my_vector <- c(10, 20, 30)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thrusday", "Friday", "Saturday", "Sunday")
my_vector_sequence <- c(1:100)
my_vector_sequence
days_of_the_week[3]
my_vector_sequence[15]
my_vector_sequence==15
my_vector_sequence <- c(1:100)
my_vector_sequence
my_vector_sequence==15
my_vector_sequence<=10
my_vector_sequence[my_vector_sequence<=10]
Philosophers_Stone <- c(317.5, 657.1)
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix
region <- c("US", "non-US")
region
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
rownames(harry_potter_matrix) <- titles
colnames(harry_potter_matrix) <- region
harry_potter_matrix
global <- rowSums(harry_potter_matrix)
global
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix
total_earnings <- colSums(all_harry_potter_matrix)
total_earnings
rbind(all_harry_potter_matrix, total_earnings)
harry_potter_matrix[2,1]
harry_potter_matrix[1:4]
#A vector is a data structure in R.
#It is essentially a list of variables grouped together.
#Data matrices are a series of stacked vectors, similar to a data table.
#Data matrices are a series of stacked   #vectors, similar to a data table.
#Data matrices are a series of stacked vectors, similar to a data table.
spring_1 <- c(36.25, 35.40, 35.30)
spring_2 <- c(35.15, 35.35, 33.35)
spring_3 <- c(30.70, 29.65, 29.20)
spring_4 <- c(39.70, 40.05, 38.65)
spring_5 <- c(31.85, 31.40, 29.30)
spring_6 <- c(30.20, 30.65, 29.75)
spring_7 <- c(32.90, 32.50, 32.80)
spring_8 <- c(36.80, 36.45, 33.15)
region <- c("US", "non-US")
region
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
colnames(harry_potter_matrix) <- region
colnames(harry_potter_matrix) <- region
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
Philosophers_Stone <- c(317.5, 657.1)
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix
colnames(harry_potter_matrix) <- region
colnames(harry_potter_matrix) <- region
harry_potter_matrix
spring_1 <- c(36.25, 35.40, 35.30)
spring_2 <- c(35.15, 35.35, 33.35)
spring_3 <- c(30.70, 29.65, 29.20)
spring_4 <- c(39.70, 40.05, 38.65)
spring_5 <- c(31.85, 31.40, 29.30)
spring_6 <- c(30.20, 30.65, 29.75)
spring_7 <- c(32.90, 32.50, 32.80)
spring_8 <- c(36.80, 36.45, 33.15)
hotspring_temp <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
hotspring_temp
hotspring_temp <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
hotspring_temp
#Create a new object called 'hotspring_temp' using the `c` command to combine the vectors into one.
hotspring_temp_matrix <- matrix(hotspring_temp, nrow = 8, byrow = T)
hotspring_temp_matrix
#Create a 'hotspring_temp_matrix' using the 'matrix()' command. Then tell R how to organize
#'hotspring_temp' vector organized by nrow and byrow commands.
scientists <- c("Jill", "Steve", "Susan")
scientists
springs <- c("spring_1","spring_2","spring_3","spring_4","spring_5","spring_6","spring_7","spring_8" )
springs
#springs gets the row names for each respective spring number
hotspring_temp <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
hotspring_temp
#Create a new object called 'hotspring_temp' using the `c` command to combine the vectors into one.
hotspring_temp_matrix <- matrix(hotspring_temp, nrow = 8, byrow = T)
hotspring_temp_matrix
#Create a 'hotspring_temp_matrix' using the 'matrix()' command. Then tell R how to organize
#'hotspring_temp' vector organized by nrow and byrow commands.
scientists <- c("Jill", "Steve", "Susan")
scientists
#scientists gets the column names of the three scientists
springs <- c("spring_1","spring_2","spring_3","spring_4","spring_5","spring_6","spring_7","spring_8" )
springs
#springs gets the row names for each respective spring number
springs <- c("Bluebell_Spring","Opal_Spring","Riverside_Spring","Too_Hot_Spring","Mystery_Spring","Emerald_Spring","Black_Spring","Pearl_Spring")
springs
#springs gets the row names for each respective spring number
scientists <- c("Jill", "Steve", "Susan")
scientists
#scientists gets the column names of the three scientists
hotspring_temp_matrix
colnames(hotspring_temp_matrix) <- scientists
#name the columns using 'colnames()' with the vector scientists
rownames(hotspring_temp_matrix) <- springs
#Name the rows using `rownames()` with the vector springs.
hotspring_temp_matrix
spring_1 <- c(36.25, 35.40, 35.30)
spring_2 <- c(35.15, 35.35, 33.35)
spring_3 <- c(30.70, 29.65, 29.20)
spring_4 <- c(39.70, 40.05, 38.65)
spring_5 <- c(31.85, 31.40, 29.30)
spring_6 <- c(30.20, 30.65, 29.75)
spring_7 <- c(32.90, 32.50, 32.80)
spring_8 <- c(36.80, 36.45, 33.15)
hotspring_temp <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
hotspring_temp
#Create a new object called 'hotspring_temp' using the `c` command to combine the vectors into one.
hotspring_temp_matrix <- matrix(hotspring_temp, nrow = 8, byrow = T)
hotspring_temp_matrix
#Create a 'hotspring_temp_matrix' using the 'matrix()' command. Then tell R how to organize
#'hotspring_temp' vector organized by nrow and byrow commands.
scientists <- c("Jill", "Steve", "Susan")
scientists
#scientists gets the column names of the three scientists
springs <- c("Bluebell_Spring","Opal_Spring","Riverside_Spring","Too_Hot_Spring","Mystery_Spring","Emerald_Spring","Black_Spring","Pearl_Spring")
springs
#springs gets the row names for each respective spring number
colnames(hotspring_temp_matrix) <- scientists
#name the columns using 'colnames()' with the vector scientists
rownames(hotspring_temp_matrix) <- springs
#Name the rows using `rownames()` with the vector springs.
hotspring_temp_matrix
(270+261+268)/3
cars <- c(venom_GT, chiron, veyron)
venom_GT <- 270
chiron <- 261
veyron <- 268
cars <- c(venom_GT, chiron, veyron)
mean(cars)
average_temp <- c(Bluebell_Spring, Opal_Spring, Riverside_Spring, Too_Hot_Spring, Mystery_Spring, Emerald_Spring, Black_Spring, Pearl_Spring)
colnames(hotspring_temp_matrix) <- scientists
#name the columns using 'colnames()' with the vector scientists
rownames(hotspring_temp_matrix) <- springs
#Name the rows using `rownames()` with the vector springs.
hotspring_temp_matrix
average_temp <- c(Bluebell_Spring, Opal_Spring, Riverside_Spring, Too_Hot_Spring, Mystery_Spring, Emerald_Spring, Black_Spring, Pearl_Spring)
mean_temp <- colSums(hotspring_temp_matrix)
mean_temp
#mean_temp get the sum of all the mean_temp in the hotspring_temp_matrix
mean_hotspring <- c(Bluebell_Spring, Opal_Spring)
average_hotspring <- c(Bluebell_Spring, Opal_Spring)
average_hotspring <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
mean(average_hotspring)
mean_temp <- colSums(hotspring_temp_matrix)
mean_temp
#???DOUBLE CHECK THIS! mean_temp get the sum of all the mean_temp in the hotspring_temp_matrix
total_earnings <- colSums(all_harry_potter_matrix)
avg_temp <- colSums(hotspring_temp_matrix)
avg_temp
#avg_temp get the sum of all the columns in the hotspringmatrix
avg_temp <- rowMeans(hotspring_temp_matrix)
avg_temp
#avg_temp get the sum of all the columns in the hotspringmatrix
rbind(hotspring_temp_matrix, avg_temp)
#r is for row so therefore bind avg_temp to the harry potter matrix
rbind(all_harry_potter_matrix, total_earnings)
Philosophers_Stone <- c(317.5, 657.1)
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix
region <- c("US", "non-US")
region
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
colnames(harry_potter_matrix) <- region
rownames(harry_potter_matrix) <- titles
harry_potter_matrix
total_earnings <- colSums(all_harry_potter_matrix)
global <- rowSums(harry_potter_matrix)
global
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix
total_earnings <- colSums(all_harry_potter_matrix)
total_earnings
#total earnings get the sum of all the columns in the harry potter matrix
rbind(all_harry_potter_matrix, total_earnings)
#r is for row so therefore bind total_earnings to the harry potter matrix
rbind(hotspring_temp_matrix, avg_temp)
#r is for row so therefore bind avg_temp to the harry potter matrix
cbind(hotspring_temp_matrix, avg_temp)
#r is for row so therefore bind avg_temp to the harry potter matrix
rbind(hotspring_temp_matrix, avg_temp)
#c is for column so therefore bind avg_temp to the hotspringmatrix
cbind(hotspring_temp_matrix, avg_temp)
#c is for column so therefore bind avg_temp to the hotspringmatrix
hotspring_temp_matrix[3,2]
hotspring_temp_matrix[2,3]
non_us_earnings <- all_harry_potter_matrix[ ,2]
mean(non_us_earnings)
Jill_col <- hotspring_temp_matrix[ ,1]
mean(Jill_col)
harry_potter_matrix[1:4]
hotspring_temp_matrix[1:8]
#Use a colon `:` to selects the temperatures for each of the springs in Jill's column.
#A vector is a data structure in R.
#It is essentially multiple variables of the same type grouped together under a single piece of memory.
#A vector is a data structure in R.
#It is essentially multiple variables of the same type grouped together under a single piece of memory.
#Data matrices are a series of stacked vectors, similar to a data table.
spring_1 <- c(36.25, 35.40, 35.30)
spring_2 <- c(35.15, 35.35, 33.35)
spring_3 <- c(30.70, 29.65, 29.20)
spring_4 <- c(39.70, 40.05, 38.65)
spring_5 <- c(31.85, 31.40, 29.30)
spring_6 <- c(30.20, 30.65, 29.75)
spring_7 <- c(32.90, 32.50, 32.80)
spring_8 <- c(36.80, 36.45, 33.15)
hotspring_temp <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
hotspring_temp
#Create a new object called 'hotspring_temp' using the `c` command to combine the vectors into one.
hotspring_temp_matrix <- matrix(hotspring_temp, nrow = 8, byrow = T)
hotspring_temp_matrix
#Create a 'hotspring_temp_matrix' using the 'matrix()' command. Then tell R how to organize
#'hotspring_temp' vector organized by nrow and byrow commands.
scientists <- c("Jill", "Steve", "Susan")
scientists
#scientists gets the column names of the three scientists
springs <- c("Bluebell_Spring","Opal_Spring","Riverside_Spring","Too_Hot_Spring","Mystery_Spring","Emerald_Spring","Black_Spring","Pearl_Spring")
springs
#springs gets the row names for each respective spring number
colnames(hotspring_temp_matrix) <- scientists
#name the columns using 'colnames()' with the vector scientists
rownames(hotspring_temp_matrix) <- springs
#Name the rows using `rownames()` with the vector springs.
hotspring_temp_matrix
avg_temp <- rowMeans(hotspring_temp_matrix)
avg_temp
#avg_temp get the sum of all the rows in the hotspringmatrix; output is 8 springs each with the mean
cbind(hotspring_temp_matrix, avg_temp)
#c is for column so therefore bind avg_temp to the hotspringmatrix
hotspring_temp_matrix[2,3]
#the first number is the column and the second number is the row
Jill_col <- hotspring_temp_matrix[ ,1]
mean(Jill_col)
#calculate the mean of Jill's column
hotspring_temp_matrix[1:8]
#Use a colon `:` to selects the temperatures for each of the springs in Jill's column.
