library("tidyverse")
library("janitor")
install.packages("skimr")
library("skimr")
?msleep #gives information about the dataset tells the format and the variable names and what they mean
names(msleep)
library("palmerpenguins")
msleep24 <- msleep %>%
select(name, vore)
msleep24 <- msleep %>%
select(name, vore)
library("palmerpenguins")
?msleep #gives information about the dataset tells the format and the variable names and what they mean
names(msleep)
msleep24 <- msleep %>%
select(name, vore) %>%
#mutate(sleep_total_24 = sleep
#filter(sleep_total_24 <= 0.3)
msleep24 <- msleep %>%
select(name, vore) %>%
mutate(sleep_total_24 = sleep/24) %>%
filter(sleep_total_24 <= 0.3)
msleep24 <- msleep %>%
select(name, vore) %>%
mutate(sleep_total_24 = sleep/24) %>%
filter(sleep_total_24 <= 0.3) %>%
msleep24
names(msleep)
msleep <- msleep
library("tidyverse")
library("janitor")
#install.packages("skimr")
library("skimr")
#Today we have learned a new package called skimr; once installed put the package in.
?msleep #gives information about the dataset tells the format and the variable names and what they mean
names(msleep)
library("palmerpenguins")
names(msleep)
msleep <- msleep #show the dataset in the environment panel.
msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>% #mutate makes a new column. new variable is sleep_total_24. then put the expression.
msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>% #mutate makes a new column. new variable is sleep_total_24. then put the expression.
select(name, vore, sleep_total_24, sleep_total)
msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>% #mutate makes a new column. new variable is sleep_total_24. then put the expression.
select(name, vore, sleep_total_24) %>% #Can put sleep_total in here to check if half
filter(sleep_total_24<=0.3)
msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>% #mutate makes a new column. new variable is sleep_total_24. then put the expression.
select(name, vore, sleep_total_24) %>% #Can put sleep_total in here to check if half
filter(sleep_total_24<=0.3)
arrange(desc(sleep_total_24))
msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>% #mutate makes a new column. new variable is sleep_total_24. then put the expression.
select(name, vore, sleep_total_24) %>% #Can put sleep_total in here to check if half
filter(sleep_total_24<=0.3)
arrange(desc(sleep_total_24))
msleep %>% #msleep24 <-  add to beginning
mutate(sleep_total_24 = sleep_total/24) %>% #mutate makes a new column. new variable is sleep_total_24. then put the expression.
select(name, vore, sleep_total_24) %>% #Can put sleep_total in here to check if half
filter(sleep_total_24<=0.3) %>%
arrange(desc(sleep_total_24))
msleep24 <- msleep %>%  #add msleep24 to beginning
mutate(sleep_total_24 = sleep_total/24) %>% #mutate makes a new column. new variable is sleep_total_24. then put the expression.
select(name, vore, sleep_total_24) %>% #Can put sleep_total in here to check if half
filter(sleep_total_24<=0.3) %>%
arrange(desc(sleep_total_24))
msleep24 <- msleep %>%  #add msleep24 to beginning
mutate(sleep_total_24 = sleep_total/24) %>% #mutate makes a new column. new variable is sleep_total_24. then put the expression.
select(name, vore, sleep_total_24) %>% #Can put sleep_total in here to check if half
filter(sleep_total_24<=0.3) %>%
arrange(desc(sleep_total_24))
library("tidyverse")
library("janitor")
#install.packages("skimr")
library("skimr")
#Today we have learned a new package called skimr; once installed put the package in.
?msleep #gives information about the dataset tells the format and the variable names and what they mean
names(msleep)
library("palmerpenguins")
names(msleep)
msleep <- msleep #show the dataset in the environment panel.
msleep24 <- msleep %>%  #add msleep24 to beginning
mutate(sleep_total_24 = sleep_total/24) %>% #mutate makes a new column. new variable is sleep_total_24. then put the expression.
select(name, vore, sleep_total_24) %>% #Can put sleep_total in here to check if half
filter(sleep_total_24<=0.3) %>%
arrange(desc(sleep_total_24))
View(msleep24)
summary(msleep24)
summary(msleep24)
skim(msleep24)
hist(msleep24$sleep_total_24)
head(msleep)
large <- msleep %>%
select(name, genus, bodywt, sleep_total) %>%
filter(bodywt > 200) %>%
arrange(desc(bodywt))
large
mean(large$sleep_total)
msleep %>%
filter(bodywt>200)
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg = mean(sleep_total))
msleep %>%
filter(bodywt<10) %>%
summarize(mean_sleep_sl = mean(sleep_total))
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg=mean(sleep_total), min_sleep_lg=min(sleep_total), max_sleep_lg=max(sleep_total), sd_sleep_lg=sd(sleep_total), total=n())
msleep %>%
filter(order="Primates") %>%
summarize(mean_primates=mean(bodywt), min_primates=min(bodywt), max_primates=max(bodywt))
msleep %>%
filter(bodywt & order="Primates") %>%
msleep %>%
#filter(order="Primates") %>%
summarize(mean_primates=mean(bodywt), min_primates=min(bodywt), max_primates=max(bodywt))
msleep %>%
filter(order="Primates") %>%
summarize(mean_primates=mean(bodywt), min_primates=min(bodywt), max_primates=max(bodywt))
View(msleep)
msleep %>%
filter(order=="Primates") %>%
summarize(mean_primates=mean(bodywt), min_primates=min(bodywt), max_primates=max(bodywt))
msleep %>%
filter(order=="Primates") %>% #filter out all the primates
summarize(mean_bodywt_primates=mean(bodywt), min_bodywt_primates=min(bodywt), max_bodywt_primates=max(bodywt))
msleep %>%
filter(order=="Primates") %>% #filter out all the primates
summarize(mean_bodywt_primates=mean(bodywt), min_bodywt_primates=min(bodywt), max_bodywt_primates=max(bodywt), total=n())
msleep %>%
filter(bodywt > 100)
msleep %>%
summarize(n_genera=n_distinct(genus)) #this is going to count the number of genera in msleep
#this is done above6!
msleep %>%
tabyl(genus)
msleep %>%
summarize(n_min_sleep=min(sleep_total), n_max_sleep=max(sleep_total), n_mean_sleep=mean(sleep_total), total=n())
msleep %>%
group_by(vore) %>% #we are grouping by feeding ecology, a categorical variable
summarize(min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
mean_bodywt = mean(bodywt),
total=n())
msleep %>%
group_by(order) %>%
summarize(mean_brainwt = mean(brainwt), total=n())
msleep %>%
group_by(order) %>%
summarize(mean_brain_wt = mean(brainwt), total=n())
msleep %>%
filter(order=="Carnivora") %>%
select(order, genus, brainwt)
msleep %>%
filter(order=="Cetacea") %>%
select(order, genus, brainwt)
msleep %>%
group_by(order) %>%
summarize(mean_brain_wt=mean(brainwt, na.rm=T))
#Cetacea is order= whatle
library("tidyverse")
library("janitor")
library("skimr")
library("palmerpenguins")
glimpse(penguins)
penguins %>%
group_by(island)
penguins %>%
group_by(island)
summarize(islands)
penguins %>%
group_by(island)
summarize(island)
penguins %>%
group_by(island) %>%
summarize(island)
penguins %>%
group_by(island)
penguins %>%
group_by(island) %>%
summarize(mean_body_mass=mean(body_mass_g))
levels(penguins$island)
penguins %>%
group_by(island) %>%
summarize(number_NAs=sum(is.na(body_mass_g)))
penguins %>%
group_by(island) %>%
summarize(mean_body_mass=mean(body_mass_g), n=n())
penguins %>%
group_by(island) %>%
summarize(mean_body_mass=mean(body_mass_g))
penguins %>%
filter(!is.na(body_mass_g)) %>% #pull out all the observations that have a number and leave all the NAs behind.
penguins %>%
group_by(species, island) %>%
summarize(n=n(), .groups= 'keep')#the .groups argument here just prevents a warning message
penguins %>%
group_by(island) %>%
summarize(n=n())
penguins %>%
count(island, sort = T) #sort=T sorts the column in descending order
penguins %>%
count(island, species, sort = T) # sort=T will arrange in descending order
penguins %>%
group_by(species) %>%
summarize(mean_bill_length_mm=mean(mean_bill_length_mm))
penguins %>%
group_by(species) %>%
summarize(mean_bill_length_mm=mean(bill_length_mm))
penguins %>%
group_by(species) %>%
summarize(mean_bill_length_mm=mean(bill_length_mm, na.rm = T))
penguins %>%
group_by(sex) %>%
filter(!is.na(sex))
penguins %>%
count(sex, island)
penguins %>%
summarize(distinct_species = n_distinct(species),
distinct_island = n_distinct(island),
distinct_sex = n_distinct(sex))
penguins %>%
summarize(across(c(species, island, sex), n_distinct)) #variables of interest, ndistinct
penguins %>%
summarize(across(contains("mm"), mean, na.rm=T))
penguins %>%
summarize(across(contains("mm"), \(x) mean(x, na.rm = TRUE)))
